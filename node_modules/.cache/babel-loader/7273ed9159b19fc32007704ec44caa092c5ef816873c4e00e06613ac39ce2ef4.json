{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\entries\\\\investModals\\\\Gold.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TakeInput from '../TakeEntry';\nimport DebitFrom from './DebitFrom'; // array like ['SBI', 'AXIS', ...]\nimport { useAuth } from '../../../context/AuthContext';\nimport { useTrans } from '../../../context/TransactionContext';\nimport './Gold.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Gold() {\n  _s();\n  const {\n    trans,\n    setTrans\n  } = useTrans();\n  const {\n    auth\n  } = useAuth();\n  const purchaseAmount = TakeInput(0);\n  const marketSellAmount = TakeInput(0);\n  const qtyPurchased = TakeInput(0);\n  const date = TakeInput(new Date().toISOString().substring(0, 10)); // use date type, so just YYYY-MM-DD\n  const cmt = TakeInput('');\n  const debit = TakeInput('');\n  const handleEntry = async () => {\n    const data = {\n      userId: auth.userId,\n      purchaseAmount: parseFloat(purchaseAmount.val),\n      marketSellAmount: parseFloat(marketSellAmount.val),\n      qtyPurchased: parseFloat(qtyPurchased.val),\n      date: new Date(date.val),\n      comment: cmt.val,\n      debitFrom: debit.val\n    };\n    try {\n      const res = await fetch('http://localhost:4500/api/invest/gold/Entry', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        throw new Error(err.error || 'Error saving gold entry');\n      }\n      setTrans(trans + 1);\n      alert('Gold entry saved successfully!');\n    } catch (err) {\n      alert('Failed to save: ' + err.message);\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"gold-form\",\n    onSubmit: e => {\n      e.preventDefault();\n      handleEntry();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"purchaseAmount\",\n      children: \"Purchased Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"purchaseAmount\",\n      type: \"number\",\n      ...purchaseAmount.bind,\n      min: \"0\",\n      step: \"any\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"marketSellAmount\",\n      children: \"Market Sell Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"marketSellAmount\",\n      type: \"number\",\n      ...marketSellAmount.bind,\n      min: \"0\",\n      step: \"any\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"qtyPurchased\",\n      children: \"Quantity Purchased\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"qtyPurchased\",\n      type: \"number\",\n      ...qtyPurchased.bind,\n      min: \"0\",\n      step: \"any\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"date\",\n      type: \"date\",\n      ...date.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comment\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"comment\",\n      type: \"text\",\n      ...cmt.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"debitFrom\",\n      children: \"Debit From\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"debitFrom\",\n      ...debit.bind,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Debit From --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), DebitFrom.map((val, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: val,\n        children: val\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gold-form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Gold, \"KYmBqlQBmOHan/PuaYdPUXExfAQ=\", false, function () {\n  return [useTrans, useAuth];\n});\n_c = Gold;\nexport default Gold;\nvar _c;\n$RefreshReg$(_c, \"Gold\");","map":{"version":3,"names":["React","TakeInput","DebitFrom","useAuth","useTrans","jsxDEV","_jsxDEV","Gold","_s","trans","setTrans","auth","purchaseAmount","marketSellAmount","qtyPurchased","date","Date","toISOString","substring","cmt","debit","handleEntry","data","userId","parseFloat","val","comment","debitFrom","res","fetch","method","headers","body","JSON","stringify","ok","err","json","Error","error","alert","message","console","className","onSubmit","e","preventDefault","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","bind","min","step","value","map","key","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/entries/investModals/Gold.js"],"sourcesContent":["import React from 'react';\r\nimport TakeInput from '../TakeEntry';\r\nimport DebitFrom from './DebitFrom';  // array like ['SBI', 'AXIS', ...]\r\nimport { useAuth } from '../../../context/AuthContext';\r\nimport { useTrans } from '../../../context/TransactionContext';\r\nimport './Gold.css';\r\n\r\nfunction Gold() {\r\n  const { trans, setTrans } = useTrans();\r\n  const { auth } = useAuth();\r\n\r\n  const purchaseAmount = TakeInput(0);\r\n  const marketSellAmount = TakeInput(0);\r\n  const qtyPurchased = TakeInput(0);\r\n  const date = TakeInput(new Date().toISOString().substring(0, 10)); // use date type, so just YYYY-MM-DD\r\n  const cmt = TakeInput('');\r\n  const debit = TakeInput('');\r\n\r\n  const handleEntry = async () => {\r\n    const data = {\r\n      userId: auth.userId,\r\n      purchaseAmount: parseFloat(purchaseAmount.val),\r\n      marketSellAmount: parseFloat(marketSellAmount.val),\r\n      qtyPurchased: parseFloat(qtyPurchased.val),\r\n      date: new Date(date.val),\r\n      comment: cmt.val,\r\n      debitFrom: debit.val,\r\n    };\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:4500/api/invest/gold/Entry', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const err = await res.json();\r\n        throw new Error(err.error || 'Error saving gold entry');\r\n      }\r\n\r\n      setTrans(trans + 1);\r\n      alert('Gold entry saved successfully!');\r\n    } catch (err) {\r\n      alert('Failed to save: ' + err.message);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"gold-form\" onSubmit={e => { e.preventDefault(); handleEntry(); }}>\r\n      <label htmlFor=\"purchaseAmount\">Purchased Amount</label>\r\n      <input id=\"purchaseAmount\" type=\"number\" {...purchaseAmount.bind} min=\"0\" step=\"any\" />\r\n\r\n      <label htmlFor=\"marketSellAmount\">Market Sell Amount</label>\r\n      <input id=\"marketSellAmount\" type=\"number\" {...marketSellAmount.bind} min=\"0\" step=\"any\" />\r\n\r\n      <label htmlFor=\"qtyPurchased\">Quantity Purchased</label>\r\n      <input id=\"qtyPurchased\" type=\"number\" {...qtyPurchased.bind} min=\"0\" step=\"any\" />\r\n\r\n      <label htmlFor=\"date\">Date</label>\r\n      <input id=\"date\" type=\"date\" {...date.bind} />\r\n\r\n      <label htmlFor=\"comment\">Comments</label>\r\n      <input id=\"comment\" type=\"text\" {...cmt.bind} />\r\n\r\n      <label htmlFor=\"debitFrom\">Debit From</label>\r\n      <select id=\"debitFrom\" {...debit.bind} >\r\n        <option value=\"\">-- Select Debit From --</option>\r\n        {DebitFrom.map((val, key) => (\r\n          <option key={key} value={val}>{val}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <div className=\"gold-form-actions\">\r\n        <button type=\"submit\">Enter</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Gold;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}