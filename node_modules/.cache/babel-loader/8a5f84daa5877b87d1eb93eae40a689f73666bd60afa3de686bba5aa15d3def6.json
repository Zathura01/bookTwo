{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\user\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Inputuser from './Inputuser';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../user/Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const user = Inputuser('');\n  const password = Inputuser('');\n  const {\n    setAuthData\n  } = useAuth(); // ✅ destructure\n\n  const handleSub = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch('http://localhost:4500/api/userlog/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: user.user,\n          password: password.user\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n      if (!res.ok) {\n        alert(data.message || 'Login failed');\n        return;\n      }\n      const {\n        userId,\n        token\n      } = data; // ✅ make sure backend sends these\n\n      setAuthData(userId, token); // ✅ save to context\n      alert('Login successful');\n      navigate('/home');\n    } catch (err) {\n      console.error('Login error:', err);\n      alert('Something went wrong');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSub,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your username or email\",\n          type: \"text\",\n          ...user.bind\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter your password\",\n          type: \"password\",\n          ...password.bind\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Forgot Password >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"xnrUIUKIXqT2Opb2EO+ZADzeAXw=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Inputuser","useNavigate","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","user","password","setAuthData","handleSub","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","alert","message","userId","token","err","error","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","bind","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/user/Login.js"],"sourcesContent":["import React from 'react';\r\nimport Inputuser from './Inputuser';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../user/Login.css'\r\n\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const user = Inputuser('');\r\n  const password = Inputuser('');\r\n  const { setAuthData } = useAuth(); // ✅ destructure\r\n\r\n  const handleSub = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:4500/api/userlog/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          user: user.user,\r\n          password: password.user,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n\r\n      if (!res.ok) {\r\n        alert(data.message || 'Login failed');\r\n        return;\r\n      }\r\n\r\n      const { userId, token } = data; // ✅ make sure backend sends these\r\n\r\n      setAuthData(userId, token); // ✅ save to context\r\n      alert('Login successful');\r\n      navigate('/home');\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      alert('Something went wrong');\r\n    }\r\n  };\r\n\r\n  \r\n   return (\r\n    <>\r\n  <div className=\"login-container\">\r\n    <form onSubmit={handleSub} className=\"login-form\">\r\n      <h2>Login</h2>\r\n      <input\r\n        placeholder=\"Enter your username or email\"\r\n        type=\"text\"\r\n        {...user.bind}\r\n      />\r\n      <input\r\n        placeholder=\"Enter your password\"\r\n        type=\"password\"\r\n        {...password.bind}\r\n      />\r\n      <label>Forgot Password ></label>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n  </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}