{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\entries\\\\investModals\\\\Gold.js\";\nimport React from 'react';\nimport TakeInput from '../TakeEntry';\nimport DebitFrom from './DebitFrom'; // assumed to be an array like ['SBI', 'AXIS', ...]\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Gold() {\n  const purchaseAmount = TakeInput(0);\n  const marketSellAmount = TakeInput(0);\n  const qtyPurchased = TakeInput(0);\n  const date = TakeInput(new Date().toISOString().substring(0, 16));\n  const cmt = TakeInput('');\n  const debit = TakeInput('');\n  const handleEntry = async () => {\n    const data = {\n      purchaseAmount: parseFloat(purchaseAmount.val),\n      marketSellAmount: parseFloat(marketSellAmount.val),\n      qtyPurchased: parseFloat(qtyPurchased.val),\n      date: new Date(date.val),\n      comment: cmt.val,\n      debitFrom: debit.val\n    };\n    try {\n      const res = await fetch('http://localhost:4500/api/invest/gold/Entry', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!res.ok) {\n        const err = await res.json();\n        throw new Error(err.error || 'Error saving gold entry');\n      }\n      alert('Gold entry saved successfully!');\n    } catch (err) {\n      alert('Failed to save: ' + err.message);\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter Purchased Amount\",\n      type: \"number\",\n      ...purchaseAmount.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter Market Sell Amount\",\n      type: \"number\",\n      ...marketSellAmount.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter QTY Purchased\",\n      type: \"number\",\n      ...qtyPurchased.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Select Date\",\n      type: \"date\",\n      ...date.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter Comments\",\n      type: \"text\",\n      ...cmt.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...debit.bind,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Debit From --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), DebitFrom.map((val, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: val,\n        children: val\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEntry,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Gold;\nexport default Gold;\nvar _c;\n$RefreshReg$(_c, \"Gold\");","map":{"version":3,"names":["React","TakeInput","DebitFrom","jsxDEV","_jsxDEV","Fragment","_Fragment","Gold","purchaseAmount","marketSellAmount","qtyPurchased","date","Date","toISOString","substring","cmt","debit","handleEntry","data","parseFloat","val","comment","debitFrom","res","fetch","method","headers","body","JSON","stringify","ok","err","json","Error","error","alert","message","console","children","placeholder","type","bind","fileName","_jsxFileName","lineNumber","columnNumber","value","map","key","onClick","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/entries/investModals/Gold.js"],"sourcesContent":["import React from 'react'\r\nimport TakeInput from '../TakeEntry'\r\nimport DebitFrom from './DebitFrom'  // assumed to be an array like ['SBI', 'AXIS', ...]\r\n\r\nfunction Gold() {\r\n\r\n  const purchaseAmount = TakeInput(0)\r\n  const marketSellAmount = TakeInput(0)\r\n  const qtyPurchased = TakeInput(0)\r\n  const date = TakeInput(new Date().toISOString().substring(0, 16))\r\n  const cmt = TakeInput('')\r\n  const debit = TakeInput('')\r\n\r\n  const handleEntry = async () => {\r\n    const data = {\r\n      purchaseAmount: parseFloat(purchaseAmount.val),\r\n      marketSellAmount: parseFloat(marketSellAmount.val),\r\n      qtyPurchased: parseFloat(qtyPurchased.val),\r\n      date: new Date(date.val),\r\n      comment: cmt.val,\r\n      debitFrom: debit.val\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:4500/api/invest/gold/Entry', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n\r\n      if (!res.ok) {\r\n        const err = await res.json()\r\n        throw new Error(err.error || 'Error saving gold entry')\r\n      }\r\n\r\n      alert('Gold entry saved successfully!')\r\n    } catch (err) {\r\n      alert('Failed to save: ' + err.message)\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input placeholder='Enter Purchased Amount' type='number' {...purchaseAmount.bind} />\r\n      <input placeholder='Enter Market Sell Amount' type='number' {...marketSellAmount.bind} />\r\n      <input placeholder='Enter QTY Purchased' type='number' {...qtyPurchased.bind} />\r\n      <input placeholder='Select Date' type='date' {...date.bind} />\r\n      <input placeholder='Enter Comments' type='text' {...cmt.bind} />\r\n\r\n      <select {...debit.bind} >\r\n        <option value=\"\">-- Select Debit From --</option>\r\n        {DebitFrom.map((val, key) => (\r\n          <option key={key} value={val}>{val}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <button onClick={handleEntry}>Enter</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Gold\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}