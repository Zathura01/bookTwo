{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\user\\\\Countryhook.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Countryhook() {\n  _s();\n  const [selected, setSelected] = useState('');\n  const countries = [{\n    name: \"USA\",\n    currency: \"USD ($)\"\n  }, {\n    name: \"India\",\n    currency: \"INR (₹)\"\n  }, {\n    name: \"China\",\n    currency: \"CNY (¥)\"\n  }, {\n    name: \"Japan\",\n    currency: \"JPY (¥)\"\n  }, {\n    name: \"South Korea\",\n    currency: \"KRW (₩)\"\n  }, {\n    name: \"UK\",\n    currency: \"GBP (£)\"\n  }, {\n    name: \"Eurozone\",\n    currency: \"EUR (€)\"\n  }, {\n    name: \"Russia\",\n    currency: \"RUB (₽)\"\n  }];\n  const handleChange = e => {\n    setSelected(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Country & Currency:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selected,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), countries.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.name,\n        children: [item.name, \" - \", item.currency]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), selected && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Countryhook, \"18RT5nPrBTPIyYXVolwVU2o0VQI=\");\n_c = Countryhook;\nexport default Countryhook;\nvar _c;\n$RefreshReg$(_c, \"Countryhook\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Countryhook","_s","selected","setSelected","countries","name","currency","handleChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","item","index","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/user/Countryhook.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Countryhook() {\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const countries = [\r\n    { name: \"USA\", currency: \"USD ($)\" },\r\n    { name: \"India\", currency: \"INR (₹)\" },\r\n    { name: \"China\", currency: \"CNY (¥)\" },\r\n    { name: \"Japan\", currency: \"JPY (¥)\" },\r\n    { name: \"South Korea\", currency: \"KRW (₩)\" },\r\n    { name: \"UK\", currency: \"GBP (£)\" },\r\n    { name: \"Eurozone\", currency: \"EUR (€)\" },\r\n    { name: \"Russia\", currency: \"RUB (₽)\" }\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label>Select Country & Currency:</label>\r\n      <select value={selected} onChange={handleChange}>\r\n        <option value=\"\">-- Select --</option>\r\n        {countries.map((item, index) => (\r\n          <option key={index} value={item.name}>\r\n            {item.name} - {item.currency}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {selected && (\r\n        <p>\r\n          Selected: <strong>{selected}</strong>\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Countryhook;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAU,CAAC,EACpC;IAAED,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAU,CAAC,EACtC;IAAED,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAU,CAAC,EACtC;IAAED,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAU,CAAC,EACtC;IAAED,IAAI,EAAE,aAAa;IAAEC,QAAQ,EAAE;EAAU,CAAC,EAC5C;IAAED,IAAI,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAU,CAAC,EACnC;IAAED,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAU,CAAC,EACzC;IAAED,IAAI,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAAU,CAAC,CACxC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAO;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzClB,OAAA;MAAQa,KAAK,EAAER,QAAS;MAACc,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC9Cd,OAAA;QAAQa,KAAK,EAAC,EAAE;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACrCX,SAAS,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBtB,OAAA;QAAoBa,KAAK,EAAEQ,IAAI,CAACb,IAAK;QAAAM,QAAA,GAClCO,IAAI,CAACb,IAAI,EAAC,KAAG,EAACa,IAAI,CAACZ,QAAQ;MAAA,GADjBa,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAERb,QAAQ,iBACPL,OAAA;MAAAc,QAAA,GAAG,YACS,eAAAd,OAAA;QAAAc,QAAA,EAAST;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACJ;EAAA,eACD,CAAC;AAEP;AAACd,EAAA,CArCQD,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAuCpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}