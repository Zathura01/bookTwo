{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\investments\\\\MutualFundInsight.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTrans } from '../../../../context/TransactionContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MutualFundInsight({\n  data\n}) {\n  _s();\n  const [selector, setSelector] = useState({\n    LumpsumData: []\n  });\n  const [curr, setCurr] = useState();\n  const {\n    trans\n  } = useTrans();\n  const [choiceToSee, setChoiceToSee] = useState(true); // true means lumpsum, false means sip\n\n  const findInv = () => {\n    let totalInv = 0;\n    let totalMaketSellPrice = selector.Qty * curr;\n    totalInv = totalMaketSellPrice - selector.Amt;\n    return totalInv;\n  };\n  const dataProcessing = () => {\n    const dataMutualFund = data === null || data === void 0 ? void 0 : data.dataMutualFund;\n    if (!Array.isArray(dataMutualFund)) return;\n    let qtyTotal = 0;\n    let amtTotal = 0;\n    let invTotal = 0;\n    dataMutualFund.forEach(element => {\n      qtyTotal += Number(element.qtyPurchased || 0);\n      amtTotal += Number(element.purchaseAmount || 0);\n    });\n    const totalMaketSellPrice = qtyTotal * (curr || 0);\n    const totalInv = totalMaketSellPrice - amtTotal;\n    setSelector({\n      Qty: qtyTotal,\n      Amt: amtTotal,\n      Inv: totalInv,\n      Data: dataMutualFund\n    });\n  };\n  useEffect(() => {\n    dataProcessing();\n  }, []);\n  useEffect(() => {\n    dataProcessing();\n  }, [curr, trans, selector]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setChoiceToSee(e.target.value === \"true\"),\n      value: choiceToSee.toString(),\n      children: [\"            \", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: true,\n        children: \"Lumpsum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: false,\n        children: \"SIP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MutualFundInsight, \"2FehfJHWpGT8Nt/VINsOtFSbKkA=\", false, function () {\n  return [useTrans];\n});\n_c = MutualFundInsight;\nexport default MutualFundInsight;\nvar _c;\n$RefreshReg$(_c, \"MutualFundInsight\");","map":{"version":3,"names":["React","useEffect","useState","useTrans","jsxDEV","_jsxDEV","Fragment","_Fragment","MutualFundInsight","data","_s","selector","setSelector","LumpsumData","curr","setCurr","trans","choiceToSee","setChoiceToSee","findInv","totalInv","totalMaketSellPrice","Qty","Amt","dataProcessing","dataMutualFund","Array","isArray","qtyTotal","amtTotal","invTotal","forEach","element","Number","qtyPurchased","purchaseAmount","Inv","Data","children","onChange","e","target","value","toString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/investments/MutualFundInsight.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useTrans } from '../../../../context/TransactionContext';\r\n\r\n\r\n\r\n\r\nfunction MutualFundInsight({ data }) {\r\n\r\n    const [selector, setSelector] = useState({ LumpsumData: [] })\r\n    const [curr, setCurr] = useState();\r\n    const { trans } = useTrans()\r\n    const [choiceToSee, setChoiceToSee] = useState(true) // true means lumpsum, false means sip\r\n\r\n    const findInv = () => {\r\n\r\n        let totalInv = 0;\r\n        let totalMaketSellPrice = selector.Qty * curr;\r\n        totalInv = totalMaketSellPrice - selector.Amt;\r\n\r\n        return totalInv;\r\n    }\r\n\r\n    const dataProcessing = () => {\r\n        const dataMutualFund = data?.dataMutualFund;\r\n        if (!Array.isArray(dataMutualFund)) return;\r\n\r\n        let qtyTotal = 0;\r\n        let amtTotal = 0;\r\n        let invTotal = 0;\r\n\r\n        dataMutualFund.forEach(element => {\r\n            qtyTotal += Number(element.qtyPurchased || 0);\r\n            amtTotal += Number(element.purchaseAmount || 0);\r\n        });\r\n\r\n        const totalMaketSellPrice = qtyTotal * (curr || 0);\r\n        const totalInv = totalMaketSellPrice - amtTotal;\r\n\r\n        setSelector({\r\n            Qty: qtyTotal,\r\n            Amt: amtTotal,\r\n            Inv: totalInv,\r\n            Data: dataMutualFund,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        dataProcessing();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dataProcessing();\r\n    }, [curr, trans, selector])\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {\r\n                // <pre>{JSON.stringify(data, null, 2)}</pre>\r\n\r\n\r\n            }\r\n            <select\r\n                onChange={(e) => setChoiceToSee(e.target.value === \"true\")}\r\n                value={choiceToSee.toString()}\r\n            >            <option value={true}>Lumpsum</option>\r\n                <option value={false}>SIP</option>\r\n            </select>\r\n            \r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default MutualFundInsight"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}