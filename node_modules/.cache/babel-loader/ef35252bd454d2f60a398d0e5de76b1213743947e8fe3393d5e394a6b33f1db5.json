{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAppcntx } from '../../context/UserContext';\nimport { useAuth } from '../../context/AuthContext';\nimport useInsightState from './InsightState';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InsightSave() {\n  _s();\n  const setInsight = useInsightState();\n  setInsight.callData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: setInsight.user.userId\n  }, void 0, false);\n}\n_s(InsightSave, \"Rf17yrmCCutA4rH1vJ0US1b4jO0=\", false, function () {\n  return [useInsightState];\n});\n_c = InsightSave;\nexport default InsightSave;\nvar _c;\n$RefreshReg$(_c, \"InsightSave\");","map":{"version":3,"names":["React","useEffect","useState","useAppcntx","useAuth","useInsightState","Fragment","_Fragment","jsxDEV","_jsxDEV","InsightSave","_s","setInsight","callData","children","user","userId","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/InsightSave.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useAppcntx } from '../../context/UserContext'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport useInsightState from './InsightState'\r\n\r\nfunction InsightSave() {\r\n\r\n  const setInsight  =useInsightState()\r\n\r\n  setInsight.callData()\r\n\r\n  return (\r\n   <>\r\n   {\r\n    setInsight.user.userId\r\n   }\r\n   </>\r\n  )\r\n}\r\n\r\nexport default InsightSave"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAOC,eAAe,MAAM,gBAAgB;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAMC,UAAU,GAAGP,eAAe,CAAC,CAAC;EAEpCO,UAAU,CAACC,QAAQ,CAAC,CAAC;EAErB,oBACCJ,OAAA,CAAAF,SAAA;IAAAO,QAAA,EAECF,UAAU,CAACG,IAAI,CAACC;EAAM,gBAErB,CAAC;AAEN;AAACL,EAAA,CAbQD,WAAW;EAAA,QAECL,eAAe;AAAA;AAAAY,EAAA,GAF3BP,WAAW;AAepB,eAAeA,WAAW;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}