{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\Showexpense.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTrans } from '../../../context/TransactionContext';\nimport './Showexpense.css'; // Make sure you import your CSS here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseBanks = {\n  Food: 0,\n  Shelter: 0,\n  Gas: 0,\n  Bike: 0,\n  Stationary: 0,\n  Smoke: 0,\n  Shopping: 0,\n  Washing: 0,\n  Wine: 0,\n  Medicine: 0,\n  Jio: 0,\n  Misc: 0\n};\nfunction getFreshYearMap() {\n  const monthObj = {};\n  for (let i = 1; i <= 12; i++) {\n    const num = i.toString().padStart(2, '0');\n    const name = new Date(2000, i - 1).toLocaleString('en-US', {\n      month: 'short'\n    });\n    monthObj[num] = [name, {\n      ...baseBanks\n    }];\n  }\n  return monthObj;\n}\nfunction Showexpense({\n  data\n}) {\n  _s();\n  const [view, setView] = useState('');\n  const [selector, setSelector] = useState([]);\n  const [giveView, setGiveView] = useState({});\n  const {\n    trans\n  } = useTrans();\n  const [duration, setDuration] = useState('monthly');\n  const dataProcessing = () => {\n    const yearMap = {};\n    data.forEach(entry => {\n      var _yearMap$year$month, _yearMap$year$month$;\n      const year = entry.date.slice(0, 4);\n      const month = entry.date.slice(5, 7);\n      const bank = entry.category;\n      const amount = Number(entry.amount || 0);\n      if (!yearMap[year]) yearMap[year] = getFreshYearMap();\n      if (((_yearMap$year$month = yearMap[year][month]) === null || _yearMap$year$month === void 0 ? void 0 : (_yearMap$year$month$ = _yearMap$year$month[1]) === null || _yearMap$year$month$ === void 0 ? void 0 : _yearMap$year$month$[bank]) !== undefined) {\n        yearMap[year][month][1][bank] += amount;\n      }\n    });\n    const result = Object.entries(yearMap).sort((a, b) => b[0] - a[0]);\n    setSelector(result);\n  };\n  useEffect(() => {\n    if (data !== null && data !== void 0 && data.length) dataProcessing();\n  }, [data, trans]);\n  useEffect(() => {\n    const match = selector.find(([key]) => key === view);\n    if (match) setGiveView(match[1]);\n  }, [selector, view]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-summary-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"summary-title\",\n      children: \"Expense Insight Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: view,\n          onChange: e => setView(e.target.value),\n          children: selector.map(([key], idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: key\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"View:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: duration,\n          onChange: e => setDuration(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"monthly\",\n            children: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"quarterly\",\n            children: \"Quarterly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yearly\",\n            children: \"Yearly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"expense-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), Object.keys(baseBanks).map((val, ind) => /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              children: val\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), Object.keys(baseBanks).map((_, ind) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Amt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, ind, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(giveView).map(([monthKey, val], index) => {\n            const monthName = val[0];\n            const monthData = val[1];\n            const total = Object.values(monthData).reduce((sum, curr) => sum + curr, 0);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"month-name\",\n                children: monthName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), Object.keys(baseBanks).map((bank, i) => {\n                const amount = monthData[bank];\n                const percent = total === 0 ? '0.0%' : (amount / total * 100).toFixed(1) + '%';\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: percent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 29\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 27\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"total-cell\",\n                children: total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Showexpense, \"bnOb0UE8w+k+LQ/WXDauRXJLxfQ=\", false, function () {\n  return [useTrans];\n});\n_c = Showexpense;\nexport default Showexpense;\nvar _c;\n$RefreshReg$(_c, \"Showexpense\");","map":{"version":3,"names":["React","useState","useEffect","useTrans","jsxDEV","_jsxDEV","baseBanks","Food","Shelter","Gas","Bike","Stationary","Smoke","Shopping","Washing","Wine","Medicine","Jio","Misc","getFreshYearMap","monthObj","i","num","toString","padStart","name","Date","toLocaleString","month","Showexpense","data","_s","view","setView","selector","setSelector","giveView","setGiveView","trans","duration","setDuration","dataProcessing","yearMap","forEach","entry","_yearMap$year$month","_yearMap$year$month$","year","date","slice","bank","category","amount","Number","undefined","result","Object","entries","sort","a","b","length","match","find","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","idx","keys","val","ind","colSpan","_","Fragment","monthKey","index","monthName","monthData","total","values","reduce","sum","curr","percent","toFixed","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/Showexpense.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTrans } from '../../../context/TransactionContext';\r\nimport './Showexpense.css'; // Make sure you import your CSS here\r\n\r\nconst baseBanks = {\r\n  Food: 0, Shelter: 0, Gas: 0, Bike: 0,\r\n  Stationary: 0, Smoke: 0, Shopping: 0,\r\n  Washing: 0, Wine: 0, Medicine: 0,\r\n  Jio: 0, Misc: 0\r\n};\r\n\r\nfunction getFreshYearMap() {\r\n  const monthObj = {};\r\n  for (let i = 1; i <= 12; i++) {\r\n    const num = i.toString().padStart(2, '0');\r\n    const name = new Date(2000, i - 1).toLocaleString('en-US', { month: 'short' });\r\n    monthObj[num] = [name, { ...baseBanks }];\r\n  }\r\n  return monthObj;\r\n}\r\n\r\nfunction Showexpense({ data }) {\r\n  const [view, setView] = useState('');\r\n  const [selector, setSelector] = useState([]);\r\n  const [giveView, setGiveView] = useState({});\r\n  const { trans } = useTrans();\r\n  const [duration, setDuration] = useState('monthly');\r\n\r\n  const dataProcessing = () => {\r\n    const yearMap = {};\r\n    data.forEach(entry => {\r\n      const year = entry.date.slice(0, 4);\r\n      const month = entry.date.slice(5, 7);\r\n      const bank = entry.category;\r\n      const amount = Number(entry.amount || 0);\r\n      if (!yearMap[year]) yearMap[year] = getFreshYearMap();\r\n      if (yearMap[year][month]?.[1]?.[bank] !== undefined) {\r\n        yearMap[year][month][1][bank] += amount;\r\n      }\r\n    });\r\n    const result = Object.entries(yearMap).sort((a, b) => b[0] - a[0]);\r\n    setSelector(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data?.length) dataProcessing();\r\n  }, [data, trans]);\r\n\r\n  useEffect(() => {\r\n    const match = selector.find(([key]) => key === view);\r\n    if (match) setGiveView(match[1]);\r\n  }, [selector, view]);\r\n\r\n  return (\r\n    <div className=\"expense-summary-container\">\r\n      <h4 className=\"summary-title\">Expense Insight Summary</h4>\r\n\r\n      <div className=\"summary-controls\">\r\n        <label>\r\n          Year:\r\n          <select value={view} onChange={(e) => setView(e.target.value)}>\r\n            {\r\n              selector.map(([key], idx) => (\r\n                <option key={idx} value={key}>{key}</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          View:\r\n          <select value={duration} onChange={(e) => setDuration(e.target.value)}>\r\n            <option value='monthly'>Monthly</option>\r\n            <option value='quarterly'>Quarterly</option>\r\n            <option value='yearly'>Yearly</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"table-wrapper\">\r\n        <table className=\"expense-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Month</th>\r\n              {\r\n                Object.keys(baseBanks).map((val, ind) => (\r\n                  <th key={ind} colSpan=\"2\">{val}</th>\r\n                ))\r\n              }\r\n              <th>Total</th>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              {\r\n                Object.keys(baseBanks).map((_, ind) => (\r\n                  <React.Fragment key={ind}>\r\n                    <td>Amt</td>\r\n                    <td>%</td>\r\n                  </React.Fragment>\r\n                ))\r\n              }\r\n              <td></td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              Object.entries(giveView).map(([monthKey, val], index) => {\r\n                const monthName = val[0];\r\n                const monthData = val[1];\r\n                const total = Object.values(monthData).reduce((sum, curr) => sum + curr, 0);\r\n\r\n                return (\r\n                  <tr key={index}>\r\n                    <td className=\"month-name\">{monthName}</td>\r\n                    {\r\n                      Object.keys(baseBanks).map((bank, i) => {\r\n                        const amount = monthData[bank];\r\n                        const percent = total === 0 ? '0.0%' : ((amount / total) * 100).toFixed(1) + '%';\r\n                        return (\r\n                          <React.Fragment key={i}>\r\n                            <td>{amount}</td>\r\n                            <td>{percent}</td>\r\n                          </React.Fragment>\r\n                        );\r\n                      })\r\n                    }\r\n                    <td className=\"total-cell\">{total}</td>\r\n                  </tr>\r\n                );\r\n              })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Showexpense;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}