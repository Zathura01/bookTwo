{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\Showsave.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../details/Showsave.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec'\n};\nconst Showsave = ({\n  data\n}) => {\n  _s();\n  const [duration, setDuration] = useState('monthly');\n  const [categories, setCategories] = useState([]);\n  const [records, setRecords] = useState([]); // array of YYYY-MM\n  const [tableData, setTableData] = useState({}); // { category: { YYYY-MM: { current: x, total: y, percent: z } } }\n\n  const durationSelector = () => /*#__PURE__*/_jsxDEV(\"select\", {\n    value: duration,\n    onChange: e => setDuration(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"monthly\",\n      children: \"Monthly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"quaterly\",\n      children: \"Quarterly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"yearly\",\n      children: \"Yearly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n  const generateRecords = () => {\n    const recs = [];\n    let month = new Date().getMonth() + 1;\n    let year = new Date().getFullYear();\n    for (let i = 0; i < 12; i++) {\n      const mStr = month.toString().padStart(2, '0');\n      recs.push(`${year}-${mStr}`);\n      switch (duration) {\n        case 'monthly':\n          month -= 1;\n          break;\n        case 'quaterly':\n          month -= 3;\n          break;\n        case 'yearly':\n          month -= 12;\n          break;\n        default:\n          break;\n      }\n      while (month <= 0) {\n        month += 12;\n        year -= 1;\n      }\n    }\n    return recs.reverse(); // newest to oldest\n  };\n  const buildTableData = (recs, cats) => {\n    const tempData = {};\n    for (const cat of cats) {\n      tempData[cat] = {};\n      let cumulative = 0;\n      for (const rec of recs) {\n        const current = data.filter(d => d.category === cat && d.date.startsWith(rec)).reduce((sum, d) => sum + Number(d.deposit || 0), 0);\n        const percent = cumulative > 0 ? (current / cumulative * 100).toFixed(2) : '100.00';\n        cumulative += current;\n        tempData[cat][rec] = {\n          current,\n          total: cumulative,\n          percent\n        };\n      }\n    }\n    return tempData;\n  };\n  useEffect(() => {\n    if (data && data.length > 0) {\n      const uniqueCats = [...new Set(data.map(d => d.category))];\n      setCategories(uniqueCats);\n      const recs = generateRecords();\n      setRecords(recs);\n      const table = buildTableData(recs, uniqueCats);\n      setTableData(table);\n    }\n  }, [data, duration]);\n  const COLUMN_WIDTH = 100;\n  const COLUMNS_PER_MONTH = 3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Saving Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto',\n        width: `${(COLUMNS_PER_MONTH * 4 + 1) * COLUMN_WIDTH}px`,\n        border: '1px solid #ccc'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: `${(records.length * COLUMNS_PER_MONTH + 1) * COLUMN_WIDTH}px`,\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: `${COLUMN_WIDTH}px`\n              },\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: records.length * COLUMNS_PER_MONTH,\n              style: {\n                textAlign: 'center'\n              },\n              children: durationSelector()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), records.map((rec, idx) => {\n              const [year, m] = rec.split('-');\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 3,\n                style: {\n                  textAlign: 'center',\n                  border: '1px solid #ccc'\n                },\n                children: [months[m], \" '\", year.slice(2)]\n              }, idx * 3, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), records.map((rec, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: `${COLUMN_WIDTH}px`,\n                  border: '1px solid #ccc',\n                  textAlign: 'center'\n                },\n                children: \"Total\"\n              }, `${rec}-total`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: `${COLUMN_WIDTH}px`,\n                  border: '1px solid #ccc',\n                  textAlign: 'center'\n                },\n                children: \"Added\"\n              }, `${rec}-curr`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: `${COLUMN_WIDTH}px`,\n                  border: '1px solid #ccc',\n                  textAlign: 'center'\n                },\n                children: \"% Inc\"\n              }, `${rec}-pct`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: categories.map((cat, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: `${COLUMN_WIDTH}px`,\n                border: '1px solid #ccc'\n              },\n              children: cat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), records.map((rec, i) => {\n              var _tableData$cat;\n              const record = (tableData === null || tableData === void 0 ? void 0 : (_tableData$cat = tableData[cat]) === null || _tableData$cat === void 0 ? void 0 : _tableData$cat[rec]) || {\n                total: 0,\n                current: 0,\n                percent: '0.00'\n              };\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ccc',\n                    textAlign: 'center'\n                  },\n                  children: [\"\\u20B9\", record.total]\n                }, `${cat}-${rec}-t`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ccc',\n                    textAlign: 'center'\n                  },\n                  children: [\"\\u20B9\", record.current]\n                }, `${cat}-${rec}-c`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    border: '1px solid #ccc',\n                    textAlign: 'center'\n                  },\n                  children: [record.percent, \"%\"]\n                }, `${cat}-${rec}-p`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true);\n            })]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Showsave, \"UiWtaDaMk5jzLG4o71zA8rlmlWQ=\");\n_c = Showsave;\nexport default Showsave;\nvar _c;\n$RefreshReg$(_c, \"Showsave\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","months","Showsave","data","_s","duration","setDuration","categories","setCategories","records","setRecords","tableData","setTableData","durationSelector","value","onChange","e","target","children","fileName","_jsxFileName","lineNumber","columnNumber","generateRecords","recs","month","Date","getMonth","year","getFullYear","i","mStr","toString","padStart","push","reverse","buildTableData","cats","tempData","cat","cumulative","rec","current","filter","d","category","date","startsWith","reduce","sum","Number","deposit","percent","toFixed","total","length","uniqueCats","Set","map","table","COLUMN_WIDTH","COLUMNS_PER_MONTH","style","overflowX","width","border","borderCollapse","colSpan","textAlign","idx","m","split","slice","key","_tableData$cat","record","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/Showsave.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../details/Showsave.css';\r\n\r\nconst months = {\r\n  '01': 'Jan', '02': 'Feb', '03': 'Mar', '04': 'Apr',\r\n  '05': 'May', '06': 'Jun', '07': 'Jul', '08': 'Aug',\r\n  '09': 'Sep', '10': 'Oct', '11': 'Nov', '12': 'Dec'\r\n};\r\n\r\nconst Showsave = ({ data }) => {\r\n  const [duration, setDuration] = useState('monthly');\r\n  const [categories, setCategories] = useState([]);\r\n  const [records, setRecords] = useState([]); // array of YYYY-MM\r\n  const [tableData, setTableData] = useState({}); // { category: { YYYY-MM: { current: x, total: y, percent: z } } }\r\n\r\n  const durationSelector = () => (\r\n    <select value={duration} onChange={(e) => setDuration(e.target.value)}>\r\n      <option value=\"monthly\">Monthly</option>\r\n      <option value=\"quaterly\">Quarterly</option>\r\n      <option value=\"yearly\">Yearly</option>\r\n    </select>\r\n  );\r\n\r\n  const generateRecords = () => {\r\n  const recs = [];\r\n  let month = new Date().getMonth() + 1;\r\n  let year = new Date().getFullYear();\r\n\r\n  for (let i = 0; i < 12; i++) {\r\n    const mStr = month.toString().padStart(2, '0');\r\n    recs.push(`${year}-${mStr}`);\r\n\r\n    switch (duration) {\r\n      case 'monthly':\r\n        month -= 1;\r\n        break;\r\n      case 'quaterly':\r\n        month -= 3;\r\n        break;\r\n      case 'yearly':\r\n        month -= 12;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    while (month <= 0) {\r\n      month += 12;\r\n      year -= 1;\r\n    }\r\n  }\r\n\r\n  return recs.reverse(); // newest to oldest\r\n};\r\n\r\n\r\n  const buildTableData = (recs, cats) => {\r\n    const tempData = {};\r\n    for (const cat of cats) {\r\n      tempData[cat] = {};\r\n      let cumulative = 0;\r\n      for (const rec of recs) {\r\n        const current = data\r\n          .filter(d => d.category === cat && d.date.startsWith(rec))\r\n          .reduce((sum, d) => sum + Number(d.deposit || 0), 0);\r\n\r\n        const percent = cumulative > 0 ? ((current / cumulative) * 100).toFixed(2) : '100.00';\r\n        cumulative += current;\r\n\r\n        tempData[cat][rec] = {\r\n          current,\r\n          total: cumulative,\r\n          percent\r\n        };\r\n      }\r\n    }\r\n    return tempData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      const uniqueCats = [...new Set(data.map(d => d.category))];\r\n      setCategories(uniqueCats);\r\n\r\n      const recs = generateRecords();\r\n      setRecords(recs);\r\n\r\n      const table = buildTableData(recs, uniqueCats);\r\n      setTableData(table);\r\n    }\r\n  }, [data, duration]);\r\n\r\n  const COLUMN_WIDTH = 100;\r\n  const COLUMNS_PER_MONTH = 3;\r\n\r\n  return (\r\n    <>\r\n      <h4>Saving Insights</h4>\r\n      <div\r\n        style={{\r\n          overflowX: 'auto',\r\n          width: `${(COLUMNS_PER_MONTH * 4 + 1) * COLUMN_WIDTH}px`,\r\n          border: '1px solid #ccc',\r\n        }}\r\n      >\r\n        <table\r\n          style={{\r\n            width: `${(records.length * COLUMNS_PER_MONTH + 1) * COLUMN_WIDTH}px`,\r\n            borderCollapse: 'collapse',\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: `${COLUMN_WIDTH}px` }}>Account</th>\r\n              <th\r\n                colSpan={records.length * COLUMNS_PER_MONTH}\r\n                style={{ textAlign: 'center' }}\r\n              >\r\n                {durationSelector()}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              {records.map((rec, idx) => {\r\n                const [year, m] = rec.split('-');\r\n                return (\r\n                  <td key={idx * 3} colSpan={3} style={{ textAlign: 'center', border: '1px solid #ccc' }}>\r\n                    {months[m]} '{year.slice(2)}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              {records.map((rec, i) => (\r\n                <>\r\n                  <td key={`${rec}-total`} style={{ width: `${COLUMN_WIDTH}px`, border: '1px solid #ccc', textAlign: 'center' }}>Total</td>\r\n                  <td key={`${rec}-curr`} style={{ width: `${COLUMN_WIDTH}px`, border: '1px solid #ccc', textAlign: 'center' }}>Added</td>\r\n                  <td key={`${rec}-pct`} style={{ width: `${COLUMN_WIDTH}px`, border: '1px solid #ccc', textAlign: 'center' }}>% Inc</td>\r\n                </>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {categories.map((cat, key) => (\r\n              <tr key={key}>\r\n                <td style={{ width: `${COLUMN_WIDTH}px`, border: '1px solid #ccc' }}>{cat}</td>\r\n                {records.map((rec, i) => {\r\n                  const record = tableData?.[cat]?.[rec] || { total: 0, current: 0, percent: '0.00' };\r\n                  return (\r\n                    <>\r\n                      <td key={`${cat}-${rec}-t`} style={{ border: '1px solid #ccc', textAlign: 'center' }}>\r\n                        ₹{record.total}\r\n                      </td>\r\n                      <td key={`${cat}-${rec}-c`} style={{ border: '1px solid #ccc', textAlign: 'center' }}>\r\n                        ₹{record.current}\r\n                      </td>\r\n                      <td key={`${cat}-${rec}-p`} style={{ border: '1px solid #ccc', textAlign: 'center' }}>\r\n                        {record.percent}%\r\n                      </td>\r\n                    </>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Showsave;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}