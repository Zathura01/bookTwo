{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\investments\\\\GoldInsight.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTrans } from '../../../../context/TransactionContext';\nimport GoldCards from './GoldCards';\nimport '../investments/Gold.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GoldInsight({\n  data\n}) {\n  _s();\n  const [selector, setSelector] = useState({\n    Qty: 0,\n    Amt: 0,\n    Inv: 0,\n    Data: []\n  });\n  const [curr, setCurr] = useState();\n  const {\n    trans\n  } = useTrans();\n  const findInv = () => {\n    let totalInv = 0;\n    let totalMaketSellPrice = selector.Qty * curr;\n    totalInv = totalMaketSellPrice - selector.Amt;\n    return totalInv;\n  };\n  const dataProcessing = () => {\n    const dataGold = data === null || data === void 0 ? void 0 : data.dataGold;\n    if (!Array.isArray(dataGold)) return;\n    let qtyTotal = 0;\n    let amtTotal = 0;\n    let invTotal = 0;\n    dataGold.forEach(element => {\n      qtyTotal += Number(element.qtyPurchased || 0);\n      amtTotal += Number(element.purchaseAmount || 0);\n    });\n    const totalMaketSellPrice = qtyTotal * (curr || 0);\n    const totalInv = totalMaketSellPrice - amtTotal;\n    setSelector({\n      Qty: qtyTotal,\n      Amt: amtTotal,\n      Inv: totalInv,\n      Data: dataGold\n    });\n  };\n  useEffect(() => {\n    dataProcessing();\n  }, []);\n  useEffect(() => {\n    dataProcessing();\n  }, [curr, trans, selector]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gold\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Net Qty: \", selector.Qty, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Net Amt: \", selector.Amt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Net Profit/Loss: \", selector.Inv]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Current Sell Pricce Of Gold\",\n        name: \"curr\",\n        value: curr,\n        onChange: e => setCurr(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoldCards, {\n      data: selector.Data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GoldInsight, \"ksEx3CUscyNeVml3Ar/Dlljp8a8=\", false, function () {\n  return [useTrans];\n});\n_c = GoldInsight;\nexport default GoldInsight;\nvar _c;\n$RefreshReg$(_c, \"GoldInsight\");","map":{"version":3,"names":["React","useEffect","useState","useTrans","GoldCards","jsxDEV","_jsxDEV","Fragment","_Fragment","GoldInsight","data","_s","selector","setSelector","Qty","Amt","Inv","Data","curr","setCurr","trans","findInv","totalInv","totalMaketSellPrice","dataProcessing","dataGold","Array","isArray","qtyTotal","amtTotal","invTotal","forEach","element","Number","qtyPurchased","purchaseAmount","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","name","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/investments/GoldInsight.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useTrans } from '../../../../context/TransactionContext';\r\nimport GoldCards from './GoldCards';\r\nimport '../investments/Gold.css'\r\n\r\n\r\nfunction GoldInsight({ data }) {\r\n    const [selector, setSelector] = useState({ Qty: 0, Amt: 0, Inv: 0, Data: [] })\r\n    const [curr, setCurr] = useState();\r\n    const { trans } = useTrans()\r\n\r\n\r\n    const findInv=()=>{\r\n\r\n        let totalInv = 0;\r\n        let totalMaketSellPrice = selector.Qty*curr;\r\n        totalInv = totalMaketSellPrice - selector.Amt;\r\n  \r\n        return totalInv;\r\n    }\r\n\r\n    const dataProcessing = () => {\r\n  const dataGold = data?.dataGold;\r\n  if (!Array.isArray(dataGold)) return;\r\n\r\n  let qtyTotal = 0;\r\n  let amtTotal = 0;\r\n  let invTotal = 0;\r\n\r\n  dataGold.forEach(element => {\r\n    qtyTotal += Number(element.qtyPurchased || 0);\r\n    amtTotal += Number(element.purchaseAmount || 0);\r\n  });\r\n\r\n  const totalMaketSellPrice = qtyTotal * (curr || 0);\r\n  const totalInv = totalMaketSellPrice - amtTotal;\r\n\r\n  setSelector({\r\n    Qty: qtyTotal,\r\n    Amt: amtTotal,\r\n    Inv: totalInv,\r\n    Data: dataGold,\r\n  });\r\n};\r\n\r\n useEffect(() => {\r\n      dataProcessing();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       dataProcessing();\r\n    }, [curr, trans, selector])\r\n    \r\n   \r\n    \r\n\r\n\r\n    return (\r\n        <> \r\n            <div className='gold'>\r\n            <p>Net Qty: {selector.Qty} </p>\r\n            <p>Net Amt: {selector.Amt}</p>\r\n            <p>Net Profit/Loss: {selector.Inv}</p>\r\n            <input placeholder='Enter Current Sell Pricce Of Gold' name='curr' value={curr} onChange={(e) => setCurr(e.target.value)} />\r\n            </div>\r\n            {/* <pre>{JSON.stringify(selector.Data)}</pre> */}\r\n            <GoldCards data={selector.Data} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GoldInsight"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}