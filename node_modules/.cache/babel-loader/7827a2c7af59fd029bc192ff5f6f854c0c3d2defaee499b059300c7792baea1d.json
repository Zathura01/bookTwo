{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\entries\\\\WithdrawalEntry.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TakeInput from \"./TakeEntry\";\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst creditTo = ['SBI', 'AXIS', 'IDBI', 'MISC', 'PHYSICAL'];\nconst debitFrom = {\n  SAVE: ['SBI', 'AXIS', 'IDBI', 'MISC'],\n  INVEST: ['FIXEDDEPOSIT', 'FIXEDINTERESTBOND', 'GOLD', 'GOLDBOND', 'LAND', 'MUTUALFUND', 'PPF'],\n  MISC: ['CASH', 'GIFT', 'OTHER']\n};\nfunction WithdrawalEntry() {\n  _s();\n  const {\n    auth\n  } = useAuth();\n  const amt = TakeInput(0);\n  const date = TakeInput(new Date().toISOString().substring(0, 16));\n  const cmt = TakeInput('');\n  const credit = TakeInput('');\n  const debit = TakeInput('');\n  const handleEntry = async () => {\n    const data = {\n      userId: auth.userId,\n      amount: parseFloat(amt.val),\n      date: new Date(date.val),\n      comment: cmt.val,\n      creditTo: credit.val,\n      debitFrom: debit.val\n    };\n    try {\n      const res = await fetch('http://localhost:5000/api/withdrawal', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (res.ok) {\n        const json = await res.json();\n        alert(\"Withdrawal saved successfully!\");\n        console.log(json);\n      } else {\n        const err = await res.json();\n        throw new Error(err.error || \"Something went wrong.\");\n      }\n    } catch (err) {\n      alert(\"Error saving withdrawal: \" + err.message);\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter Amount To Be Withdrawed\",\n      ...amt.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      placeholder: \"Select Date\",\n      ...date.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Comments\",\n      ...cmt.bind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...credit.bind,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Credit To --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), creditTo.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item,\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ...debit.bind,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Debit From --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), Object.entries(debitFrom).map(([group, options]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n        label: group,\n        children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: opt,\n          children: opt\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, group, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEntry,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(WithdrawalEntry, \"9G6mHm7vboz57TgCjHTTsyGOOp0=\", false, function () {\n  return [useAuth];\n});\n_c = WithdrawalEntry;\nexport default WithdrawalEntry;\nvar _c;\n$RefreshReg$(_c, \"WithdrawalEntry\");","map":{"version":3,"names":["React","TakeInput","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","creditTo","debitFrom","SAVE","INVEST","MISC","WithdrawalEntry","_s","auth","amt","date","Date","toISOString","substring","cmt","credit","debit","handleEntry","data","userId","amount","parseFloat","val","comment","res","fetch","method","headers","body","JSON","stringify","ok","json","alert","console","log","err","Error","error","message","children","type","placeholder","bind","fileName","_jsxFileName","lineNumber","columnNumber","value","map","item","index","Object","entries","group","options","label","opt","idx","onClick","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/entries/WithdrawalEntry.js"],"sourcesContent":["import React from 'react';\r\nimport TakeInput from \"./TakeEntry\";\r\nimport { useAuth } from '../../context/AuthContext';\r\nconst creditTo = ['SBI', 'AXIS', 'IDBI', 'MISC', 'PHYSICAL'];\r\n\r\nconst debitFrom = {\r\n  SAVE: ['SBI', 'AXIS', 'IDBI', 'MISC'],\r\n  INVEST: ['FIXEDDEPOSIT', 'FIXEDINTERESTBOND', 'GOLD', 'GOLDBOND', 'LAND', 'MUTUALFUND', 'PPF'],\r\n  MISC: ['CASH', 'GIFT', 'OTHER']\r\n};\r\n\r\nfunction WithdrawalEntry() {\r\n  const { auth } = useAuth()\r\n  const amt = TakeInput(0);\r\n  const date = TakeInput(new Date().toISOString().substring(0, 16));\r\n  const cmt = TakeInput('');\r\n  const credit = TakeInput('');\r\n  const debit = TakeInput('');\r\n\r\n  const handleEntry = async () => {\r\n    const data = {\r\n      userId: auth.userId,\r\n      amount: parseFloat(amt.val),\r\n      date: new Date(date.val),\r\n      comment: cmt.val,\r\n      creditTo: credit.val,\r\n      debitFrom: debit.val\r\n    };\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/withdrawal', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n      });\r\n\r\n      if (res.ok) {\r\n        const json = await res.json();\r\n        alert(\"Withdrawal saved successfully!\");\r\n        console.log(json);\r\n      } else {\r\n        const err = await res.json();\r\n        throw new Error(err.error || \"Something went wrong.\");\r\n      }\r\n    } catch (err) {\r\n      alert(\"Error saving withdrawal: \" + err.message);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input type=\"number\" placeholder=\"Enter Amount To Be Withdrawed\" {...amt.bind} />\r\n      <input type=\"datetime-local\" placeholder=\"Select Date\" {...date.bind} />\r\n      <input type=\"text\" placeholder=\"Enter Comments\" {...cmt.bind} />\r\n\r\n      <select {...credit.bind}>\r\n        <option value=\"\">-- Select Credit To --</option>\r\n        {creditTo.map((item, index) => (\r\n          <option key={index} value={item}>{item}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select {...debit.bind}>\r\n        <option value=\"\">-- Select Debit From --</option>\r\n        {Object.entries(debitFrom).map(([group, options]) => (\r\n          <optgroup label={group} key={group}>\r\n            {options.map((opt, idx) => (\r\n              <option key={idx} value={opt}>{opt}</option>\r\n            ))}\r\n          </optgroup>\r\n        ))}\r\n      </select>\r\n\r\n      <button onClick={handleEntry}>Enter</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WithdrawalEntry;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}