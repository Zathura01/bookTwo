{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\investments\\\\GoldInsight.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTrans } from '../../../../context/TransactionContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GoldInsight({\n  data\n}) {\n  _s();\n  const [selector, setSelector] = useState({\n    Qty: 0,\n    Amt: 0,\n    Inv: 0,\n    Data: []\n  });\n  const [curr, setCurr] = useState();\n  const {\n    trans\n  } = useTrans();\n  const findInv = () => {\n    let totalInv = 0;\n    let totalMaketSellPrice = selector.Qty * curr;\n    totalInv = totalMaketSellPrice - selector.Amt;\n    return totalInv;\n  };\n  const dataProcessing = () => {\n    const dataGold = data.dataGold;\n    let qtyTotal = 0;\n    let amtTotal = 0;\n    let invTotal = 0;\n    dataGold.map((val, ind) => {\n      qtyTotal += Number(val.qtyPurchased || 0);\n      amtTotal += Number(val.purchaseAmount || 0);\n    });\n    let totalMaketSellPrice = qtyTotal * curr;\n    let totalInv = totalMaketSellPrice - selector.Amt;\n    invTotal = totalInv || 0;\n    setSelector(prev => ({\n      ...prev,\n      Qty: qtyTotal,\n      Amt: amtTotal,\n      Inv: invTotal,\n      Date: dataGold\n    }));\n  };\n  useEffect(() => {\n    dataProcessing();\n  }, [curr, trans]);\n  useEffect(() => {\n    first;\n    return () => {\n      second;\n    };\n  }, [selector]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Net Qty: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Net Amt: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Net Profit/Loss: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter Current Sell Pricce Of Gold\",\n      name: \"curr\",\n      value: curr,\n      onChange: e => setCurr(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: findInv,\n      children: \"Find Profit/Loss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(selector.Data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GoldInsight, \"ksEx3CUscyNeVml3Ar/Dlljp8a8=\", false, function () {\n  return [useTrans];\n});\n_c = GoldInsight;\nexport default GoldInsight;\nvar _c;\n$RefreshReg$(_c, \"GoldInsight\");","map":{"version":3,"names":["React","useEffect","useState","useTrans","jsxDEV","_jsxDEV","Fragment","_Fragment","GoldInsight","data","_s","selector","setSelector","Qty","Amt","Inv","Data","curr","setCurr","trans","findInv","totalInv","totalMaketSellPrice","dataProcessing","dataGold","qtyTotal","amtTotal","invTotal","map","val","ind","Number","qtyPurchased","purchaseAmount","prev","Date","first","second","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","name","value","onChange","e","target","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/investments/GoldInsight.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useTrans } from '../../../../context/TransactionContext';\r\n\r\nfunction GoldInsight({ data }) {\r\n    const [selector, setSelector] = useState({ Qty: 0, Amt: 0, Inv: 0, Data: [] })\r\n    const [curr, setCurr] = useState();\r\n    const { trans } = useTrans()\r\n\r\n\r\n    const findInv=()=>{\r\n\r\n        let totalInv = 0;\r\n        let totalMaketSellPrice = selector.Qty*curr;\r\n        totalInv = totalMaketSellPrice - selector.Amt;\r\n  \r\n        return totalInv;\r\n    }\r\n\r\n    const dataProcessing = () => {\r\n        const dataGold = data.dataGold\r\n        let qtyTotal = 0\r\n        let amtTotal = 0\r\n        let invTotal = 0\r\n        dataGold.map((val, ind) => {\r\n\r\n            qtyTotal += Number(val.qtyPurchased || 0);\r\n            amtTotal += Number(val.purchaseAmount || 0);\r\n\r\n\r\n        })\r\n        let totalMaketSellPrice = qtyTotal*curr;\r\n        let totalInv = totalMaketSellPrice - selector.Amt;\r\n        invTotal = totalInv || 0\r\n        setSelector((prev) => ({ ...prev, Qty: qtyTotal, Amt: amtTotal, Inv: invTotal, Date: dataGold }))\r\n    }\r\n\r\n    useEffect(() => {\r\n       dataProcessing();\r\n    }, [curr, trans])\r\n    \r\n    useEffect(() => {\r\n      first\r\n    \r\n      return () => {\r\n        second\r\n      }\r\n    }, [selector])\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <p>Net Qty: </p>\r\n            <p>Net Amt: </p>\r\n            <p>Net Profit/Loss: </p>\r\n            <input placeholder='Enter Current Sell Pricce Of Gold' name='curr' value={curr} onChange={(e) => setCurr(e.target.value)} />\r\n            <button onClick={findInv}>Find Profit/Loss</button>\r\n            <pre>{JSON.stringify(selector.Data)}</pre>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GoldInsight"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}