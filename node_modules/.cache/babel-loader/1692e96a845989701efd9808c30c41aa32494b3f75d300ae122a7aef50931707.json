{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\user\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Inputuser from './Inputuser';\nimport Countryhook from './Countryhook';\nimport Alerthook from './Alerthook';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const navigate = useNavigate();\n\n  // Input fields\n  const firstName = Inputuser('');\n  const lastName = Inputuser('');\n  const email = Inputuser('');\n  const dob = Inputuser('');\n  const country = Inputuser(''); // ✅ Fixed: initialize with empty string\n  const username = Inputuser(''); // ✅ Use \"username\" instead of \"userName\"\n  const password = Inputuser('');\n  const repassword = Inputuser('');\n  const alerto = Alerthook(2);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password.user !== repassword.user) {\n      return alerto.setAlerto(2); // ✅ Only alerts if passwords don't match\n    }\n    const formBody = {\n      firstname: firstName.user,\n      lastname: lastName.user,\n      username: userName.user,\n      email: email.user,\n      dob: dob.user,\n      country: country.user,\n      password: password.user\n    };\n    console.log('Submitting:', formBody);\n    try {\n      const response = await fetch(\"http://localhost:4500/api/user/register\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formBody)\n      });\n      const jdata = await response.json();\n      console.log('Response:', jdata);\n      if (!response.ok) {\n        alert('Registration failed: ' + jdata.message);\n        return;\n      }\n      navigate('/home'); // ✅ Navigate after success\n    } catch (error) {\n      console.error('Error during registration:', error);\n      alert('Network error. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your First Name\",\n        type: \"text\",\n        ...firstName.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Last Name\",\n        type: \"text\",\n        ...lastName.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Email\",\n        type: \"email\",\n        ...email.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Select Your Date Of Birth\",\n        type: \"date\",\n        ...dob.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Select Your Country\",\n        type: \"text\",\n        ...country.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Countryhook, {\n        setCountry: country.setUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Username\",\n        type: \"text\",\n        ...username.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter Your Password\",\n        type: \"password\",\n        ...password.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"ReEnter Your Password\",\n        type: \"password\",\n        ...repassword.bind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Register, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Inputuser","Countryhook","Alerthook","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","firstName","lastName","email","dob","country","username","password","repassword","alerto","handleSubmit","e","preventDefault","user","setAlerto","formBody","firstname","lastname","userName","console","log","response","fetch","method","headers","body","JSON","stringify","jdata","json","ok","alert","message","error","children","onSubmit","placeholder","type","bind","fileName","_jsxFileName","lineNumber","columnNumber","setCountry","setUser","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/user/Register.js"],"sourcesContent":["import React from 'react'\r\nimport Inputuser from './Inputuser'\r\nimport Countryhook from './Countryhook'\r\nimport Alerthook from './Alerthook'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n    const navigate = useNavigate();\r\n\r\n    // Input fields\r\n    const firstName = Inputuser('');\r\n    const lastName = Inputuser('');\r\n    const email = Inputuser('');\r\n    const dob = Inputuser('');\r\n    const country = Inputuser(''); // ✅ Fixed: initialize with empty string\r\n    const username = Inputuser(''); // ✅ Use \"username\" instead of \"userName\"\r\n    const password = Inputuser('');\r\n    const repassword = Inputuser('');\r\n    const alerto = Alerthook(2);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.user !== repassword.user) {\r\n            return alerto.setAlerto(2); // ✅ Only alerts if passwords don't match\r\n        }\r\n\r\n      const formBody = {\r\n  firstname: firstName.user,\r\n  lastname: lastName.user,\r\n  username: userName.user,\r\n  email: email.user,\r\n  dob: dob.user,\r\n  country: country.user,\r\n  password: password.user\r\n}\r\n\r\n        console.log('Submitting:', formBody);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:4500/api/user/register\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formBody)\r\n            });\r\n\r\n            const jdata = await response.json();\r\n            console.log('Response:', jdata);\r\n\r\n            if (!response.ok) {\r\n                alert('Registration failed: ' + jdata.message);\r\n                return;\r\n            }\r\n\r\n            navigate('/home'); // ✅ Navigate after success\r\n        } catch (error) {\r\n            console.error('Error during registration:', error);\r\n            alert('Network error. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input placeholder='Enter Your First Name' type='text' {...firstName.bind} />\r\n                <input placeholder='Enter Your Last Name' type='text' {...lastName.bind} />\r\n                <input placeholder='Enter Your Email' type='email' {...email.bind} />\r\n                <input placeholder='Select Your Date Of Birth' type='date' {...dob.bind} />\r\n                <input placeholder='Select Your Country' type='text' {...country.bind} /> {/* ✅ Fixed type */}\r\n                <Countryhook setCountry={country.setUser} /> {/* Assuming this sets country string */}\r\n                <input placeholder='Enter Your Username' type='text' {...username.bind} />\r\n                <input placeholder='Enter Your Password' type='password' {...password.bind} />\r\n                <input placeholder='ReEnter Your Password' type='password' {...repassword.bind} />\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}