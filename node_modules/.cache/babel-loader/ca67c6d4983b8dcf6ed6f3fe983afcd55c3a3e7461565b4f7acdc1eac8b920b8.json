{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\Showexpense.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTrans } from '../../../context/TransactionContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseBanks = {\n  Food,\n  Shelter,\n  Gas,\n  Bike,\n  Stationary,\n  Smoke,\n  Shopping,\n  Washing,\n  Wine,\n  Medicine,\n  Jio,\n  Misc\n};\nconst monthsMap = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec'\n};\nfunction getFreshYearMap() {\n  const monthObj = {};\n  for (let i = 1; i <= 12; i++) {\n    const num = i.toString().padStart(2, '0');\n    const name = new Date(2000, i - 1).toLocaleString('en-US', {\n      month: 'short'\n    });\n    monthObj[num] = [name, {\n      ...baseBanks\n    }];\n  }\n  return monthObj;\n}\nfunction Showexpense({\n  data\n}) {\n  _s();\n  const {\n    trans\n  } = useTrans();\n  const [selector, setSelector] = useState([]);\n  const [view, setView] = useState({});\n  const dataProcessing = () => {\n    const yearMap = {};\n    data.forEach(entry => {\n      const year = entry.date.slice(0, 4);\n      const month = entry.date.slice(5, 7);\n      const bank = entry.category;\n      const amount = Number(entry.deposit || 0);\n\n      // If year not seen yet, initialize fresh full month map\n      if (!yearMap[year]) {\n        yearMap[year] = getFreshYearMap();\n      }\n      if (yearMap[year][month] && yearMap[year][month][1][bank] !== undefined) {\n        yearMap[year][month][1][bank] += amount;\n      }\n    });\n\n    // Convert to array of [year, monthData]\n    setSelector(Object.entries(yearMap).sort((a, b) => b[0] - a[0])); // sorted newest to oldest\n  };\n  useEffect(() => {\n    console.log(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Showexpense, \"pcObWi6LQCUJBrggf0yEJpm1GtA=\", false, function () {\n  return [useTrans];\n});\n_c = Showexpense;\nexport default Showexpense;\nvar _c;\n$RefreshReg$(_c, \"Showexpense\");","map":{"version":3,"names":["React","useState","useEffect","useTrans","jsxDEV","_jsxDEV","Fragment","_Fragment","baseBanks","Food","Shelter","Gas","Bike","Stationary","Smoke","Shopping","Washing","Wine","Medicine","Jio","Misc","monthsMap","getFreshYearMap","monthObj","i","num","toString","padStart","name","Date","toLocaleString","month","Showexpense","data","_s","trans","selector","setSelector","view","setView","dataProcessing","yearMap","forEach","entry","year","date","slice","bank","category","amount","Number","deposit","undefined","Object","entries","sort","a","b","console","log","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/Showexpense.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useTrans } from '../../../context/TransactionContext';\r\n\r\n\r\n\r\nconst baseBanks = {\r\n  Food,\r\n  Shelter,\r\n  Gas,\r\n  Bike,\r\n  Stationary,\r\n  Smoke,\r\n  Shopping,\r\n  Washing,\r\n  Wine,\r\n  Medicine,\r\n  Jio,\r\n  Misc\r\n}\r\n\r\n\r\n\r\nconst monthsMap = {\r\n  '01': 'Jan', '02': 'Feb', '03': 'Mar', '04': 'Apr',\r\n  '05': 'May', '06': 'Jun', '07': 'Jul', '08': 'Aug',\r\n  '09': 'Sep', '10': 'Oct', '11': 'Nov', '12': 'Dec'\r\n};\r\n\r\nfunction getFreshYearMap() {\r\n  const monthObj = {};\r\n  for (let i = 1; i <= 12; i++) {\r\n    const num = i.toString().padStart(2, '0');\r\n    const name = new Date(2000, i - 1).toLocaleString('en-US', { month: 'short' });\r\n    monthObj[num] = [name, { ...baseBanks }];\r\n  }\r\n  return monthObj;\r\n}\r\n\r\nfunction Showexpense({data}) {\r\n \r\n  const { trans } = useTrans();\r\n  const [ selector, setSelector] = useState([])\r\n  const [ view, setView] = useState({})\r\n\r\n   const dataProcessing = () => {\r\n    const yearMap = {};\r\n\r\n    data.forEach(entry => {\r\n      const year = entry.date.slice(0, 4);\r\n      const month = entry.date.slice(5, 7);\r\n      const bank = entry.category;\r\n      const amount = Number(entry.deposit || 0);\r\n\r\n      // If year not seen yet, initialize fresh full month map\r\n      if (!yearMap[year]) {\r\n        yearMap[year] = getFreshYearMap();\r\n      }\r\n\r\n      if (yearMap[year][month] && yearMap[year][month][1][bank] !== undefined) {\r\n        yearMap[year][month][1][bank] += amount;\r\n      }\r\n    });\r\n\r\n    // Convert to array of [year, monthData]\r\n    setSelector(Object.entries(yearMap).sort((a, b) => b[0] - a[0])); // sorted newest to oldest\r\n  };\r\n\r\n  useEffect(() => {\r\n     console.log(data);\r\n \r\n \r\n \r\n   }, [])\r\n \r\n    return (\r\n    <>\r\n    <pre>{JSON.stringify(data, null, 2)}</pre> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Showexpense"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI/D,MAAMC,SAAS,GAAG;EAChBC,IAAI;EACJC,OAAO;EACPC,GAAG;EACHC,IAAI;EACJC,UAAU;EACVC,KAAK;EACLC,QAAQ;EACRC,OAAO;EACPC,IAAI;EACJC,QAAQ;EACRC,GAAG;EACHC;AACF,CAAC;AAID,MAAMC,SAAS,GAAG;EAChB,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAClD,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAClD,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE,KAAK;EAAE,IAAI,EAAE;AAC/C,CAAC;AAED,SAASC,eAAeA,CAAA,EAAG;EACzB,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5B,MAAMC,GAAG,GAAGD,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,IAAI,EAAEL,CAAC,GAAG,CAAC,CAAC,CAACM,cAAc,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;IAC9ER,QAAQ,CAACE,GAAG,CAAC,GAAG,CAACG,IAAI,EAAE;MAAE,GAAGpB;IAAU,CAAC,CAAC;EAC1C;EACA,OAAOe,QAAQ;AACjB;AAEA,SAASS,WAAWA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAE3B,MAAM;IAAEC;EAAM,CAAC,GAAGhC,QAAQ,CAAC,CAAC;EAC5B,MAAM,CAAEiC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAAEqC,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMuC,cAAc,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAG,CAAC,CAAC;IAElBR,IAAI,CAACS,OAAO,CAACC,KAAK,IAAI;MACpB,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACnC,MAAMf,KAAK,GAAGY,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACpC,MAAMC,IAAI,GAAGJ,KAAK,CAACK,QAAQ;MAC3B,MAAMC,MAAM,GAAGC,MAAM,CAACP,KAAK,CAACQ,OAAO,IAAI,CAAC,CAAC;;MAEzC;MACA,IAAI,CAACV,OAAO,CAACG,IAAI,CAAC,EAAE;QAClBH,OAAO,CAACG,IAAI,CAAC,GAAGtB,eAAe,CAAC,CAAC;MACnC;MAEA,IAAImB,OAAO,CAACG,IAAI,CAAC,CAACb,KAAK,CAAC,IAAIU,OAAO,CAACG,IAAI,CAAC,CAACb,KAAK,CAAC,CAAC,CAAC,CAAC,CAACgB,IAAI,CAAC,KAAKK,SAAS,EAAE;QACvEX,OAAO,CAACG,IAAI,CAAC,CAACb,KAAK,CAAC,CAAC,CAAC,CAAC,CAACgB,IAAI,CAAC,IAAIE,MAAM;MACzC;IACF,CAAC,CAAC;;IAEF;IACAZ,WAAW,CAACgB,MAAM,CAACC,OAAO,CAACb,OAAO,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;EAEDtD,SAAS,CAAC,MAAM;IACbwD,OAAO,CAACC,GAAG,CAAC1B,IAAI,CAAC;EAInB,CAAC,EAAE,EAAE,CAAC;EAEL,oBACA5B,OAAA,CAAAE,SAAA;IAAAqD,QAAA,eACAvD,OAAA;MAAAuD,QAAA,EAAMC,IAAI,CAACC,SAAS,CAAC7B,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBACxC,CAAC;AAEP;AAAChC,EAAA,CAzCQF,WAAW;EAAA,QAEA7B,QAAQ;AAAA;AAAAgE,EAAA,GAFnBnC,WAAW;AA2CpB,eAAeA,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}