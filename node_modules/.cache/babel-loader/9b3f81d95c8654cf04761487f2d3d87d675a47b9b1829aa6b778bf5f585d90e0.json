{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\Showexpense.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTrans } from '../../../context/TransactionContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Showexpense({\n  data\n}) {\n  _s();\n  const {\n    trans\n  } = useTrans();\n  const [selector, setSelector] = useState([]);\n  const [view, setView] = useState({});\n  const dataProcessing = () => {\n    const yearMap = {};\n    data.forEach(entry => {\n      const year = entry.date.slice(0, 4);\n      const month = entry.date.slice(5, 7);\n      const bank = entry.category;\n      const amount = Number(entry.deposit || 0);\n\n      // If year not seen yet, initialize fresh full month map\n      if (!yearMap[year]) {\n        yearMap[year] = getFreshYearMap();\n      }\n      if (yearMap[year][month] && yearMap[year][month][1][bank] !== undefined) {\n        yearMap[year][month][1][bank] += amount;\n      }\n    });\n\n    // Convert to array of [year, monthData]\n    setSelector(Object.entries(yearMap).sort((a, b) => b[0] - a[0])); // sorted newest to oldest\n  };\n  useEffect(() => {\n    console.log(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Showexpense, \"pcObWi6LQCUJBrggf0yEJpm1GtA=\", false, function () {\n  return [useTrans];\n});\n_c = Showexpense;\nexport default Showexpense;\nvar _c;\n$RefreshReg$(_c, \"Showexpense\");","map":{"version":3,"names":["React","useState","useEffect","useTrans","jsxDEV","_jsxDEV","Fragment","_Fragment","Showexpense","data","_s","trans","selector","setSelector","view","setView","dataProcessing","yearMap","forEach","entry","year","date","slice","month","bank","category","amount","Number","deposit","getFreshYearMap","undefined","Object","entries","sort","a","b","console","log","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/Showexpense.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useTrans } from '../../../context/TransactionContext';\r\n\r\nfunction Showexpense({data}) {\r\n \r\n  const { trans } = useTrans();\r\n  const [ selector, setSelector] = useState([])\r\n  const [ view, setView] = useState({})\r\n\r\n   const dataProcessing = () => {\r\n    const yearMap = {};\r\n\r\n    data.forEach(entry => {\r\n      const year = entry.date.slice(0, 4);\r\n      const month = entry.date.slice(5, 7);\r\n      const bank = entry.category;\r\n      const amount = Number(entry.deposit || 0);\r\n\r\n      // If year not seen yet, initialize fresh full month map\r\n      if (!yearMap[year]) {\r\n        yearMap[year] = getFreshYearMap();\r\n      }\r\n\r\n      if (yearMap[year][month] && yearMap[year][month][1][bank] !== undefined) {\r\n        yearMap[year][month][1][bank] += amount;\r\n      }\r\n    });\r\n\r\n    // Convert to array of [year, monthData]\r\n    setSelector(Object.entries(yearMap).sort((a, b) => b[0] - a[0])); // sorted newest to oldest\r\n  };\r\n\r\n  useEffect(() => {\r\n     console.log(data);\r\n \r\n \r\n \r\n   }, [])\r\n \r\n    return (\r\n    <>\r\n    <pre>{JSON.stringify(data, null, 2)}</pre> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Showexpense"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,WAAWA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAE3B,MAAM;IAAEC;EAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC5B,MAAM,CAAES,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAAEa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAG,CAAC,CAAC;IAElBR,IAAI,CAACS,OAAO,CAACC,KAAK,IAAI;MACpB,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACnC,MAAMC,KAAK,GAAGJ,KAAK,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACpC,MAAME,IAAI,GAAGL,KAAK,CAACM,QAAQ;MAC3B,MAAMC,MAAM,GAAGC,MAAM,CAACR,KAAK,CAACS,OAAO,IAAI,CAAC,CAAC;;MAEzC;MACA,IAAI,CAACX,OAAO,CAACG,IAAI,CAAC,EAAE;QAClBH,OAAO,CAACG,IAAI,CAAC,GAAGS,eAAe,CAAC,CAAC;MACnC;MAEA,IAAIZ,OAAO,CAACG,IAAI,CAAC,CAACG,KAAK,CAAC,IAAIN,OAAO,CAACG,IAAI,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAKM,SAAS,EAAE;QACvEb,OAAO,CAACG,IAAI,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAIE,MAAM;MACzC;IACF,CAAC,CAAC;;IAEF;IACAb,WAAW,CAACkB,MAAM,CAACC,OAAO,CAACf,OAAO,CAAC,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACbkC,OAAO,CAACC,GAAG,CAAC5B,IAAI,CAAC;EAInB,CAAC,EAAE,EAAE,CAAC;EAEL,oBACAJ,OAAA,CAAAE,SAAA;IAAA+B,QAAA,eACAjC,OAAA;MAAAiC,QAAA,EAAMC,IAAI,CAACC,SAAS,CAAC/B,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBACxC,CAAC;AAEP;AAAClC,EAAA,CAzCQF,WAAW;EAAA,QAEAL,QAAQ;AAAA;AAAA0C,EAAA,GAFnBrC,WAAW;AA2CpB,eAAeA,WAAW;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}