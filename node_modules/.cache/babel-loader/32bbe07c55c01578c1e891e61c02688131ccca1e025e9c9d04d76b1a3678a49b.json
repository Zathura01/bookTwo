{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\Showsave.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../details/Showsave.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst months = {\n  '1': 'Jan',\n  '2': 'Feb',\n  '3': 'Mar',\n  '4': 'Apr',\n  '5': 'May',\n  '6': 'Jun',\n  '7': 'Jul',\n  '8': 'Aug',\n  '9': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec'\n};\nfunction Showsave({\n  data\n}) {\n  _s();\n  const [duration, setDuration] = useState('monthly');\n  const [categories, setCategories] = useState([]);\n  const [records, setRecords] = useState([]);\n  const [aggregated, setAggregated] = useState({});\n  const durationSelector = () => /*#__PURE__*/_jsxDEV(\"select\", {\n    value: duration,\n    onChange: e => setDuration(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"monthly\",\n      children: \"Monthly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"quaterly\",\n      children: \"Quarterly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"yearly\",\n      children: \"Yearly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n  const formatDateKey = (month, year) => {\n    const mn = months[month.toString()];\n    const shortYear = year.toString().slice(2, 4);\n    return `${mn} ${shortYear}`;\n  };\n  const getUniqueCategories = () => {\n    const cats = [...new Set(data.map(item => item.category))];\n    setCategories(cats);\n  };\n  const getRecords = () => {\n    const recs = [];\n    let month = new Date().getMonth() + 1;\n    let year = new Date().getFullYear();\n    for (let i = 0; i < 36; i++) {\n      recs.push(formatDateKey(month, year));\n      switch (duration) {\n        case 'monthly':\n          month -= 1;\n          break;\n        case 'quaterly':\n          month -= 3;\n          break;\n        case 'yearly':\n          month -= 12;\n          break;\n        default:\n          break;\n      }\n      while (month <= 0) {\n        month += 12;\n        year--;\n      }\n    }\n    setRecords(recs);\n  };\n  const getMonthYearKey = dateStr => {\n    const date = new Date(dateStr);\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    if (duration === 'monthly') {\n      return formatDateKey(month, year);\n    } else if (duration === 'quaterly') {\n      const startMonth = Math.floor((month - 1) / 3) * 3 + 1;\n      return formatDateKey(startMonth, year);\n    } else if (duration === 'yearly') {\n      return formatDateKey(1, year);\n    }\n  };\n  const computeAggregatedData = () => {\n    const agg = {};\n    for (let item of data) {\n      const key = getMonthYearKey(item.createdAt);\n      const cat = item.category;\n      if (!agg[cat]) agg[cat] = {};\n      if (!agg[cat][key]) agg[cat][key] = 0;\n      agg[cat][key] += item.deposit;\n    }\n    setAggregated(agg);\n  };\n  useEffect(() => {\n    if (data && data.length > 0) {\n      getUniqueCategories();\n      getRecords();\n      computeAggregatedData();\n    }\n  }, [data, duration]);\n  const COLUMN_WIDTH = 100;\n  const VISIBLE_COLUMNS = 4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Saving Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto',\n        width: `${(VISIBLE_COLUMNS + 1) * COLUMN_WIDTH}px`,\n        border: '1px solid #ccc'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: `${(records.length + 1) * COLUMN_WIDTH}px`,\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                width: `${COLUMN_WIDTH}px`\n              },\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: records.length,\n              style: {\n                width: `${records.length * COLUMN_WIDTH}px`\n              },\n              children: durationSelector()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), records.map((val, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: `${COLUMN_WIDTH}px`,\n                border: '1px solid #ccc',\n                textAlign: 'center'\n              },\n              children: val\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: categories.map((cat, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                width: `${COLUMN_WIDTH}px`,\n                border: '1px solid #ccc'\n              },\n              children: cat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), records.map((rec, j) => {\n              var _aggregated$cat$rec, _aggregated$cat;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: `${COLUMN_WIDTH}px`,\n                  border: '1px solid #ccc',\n                  textAlign: 'center'\n                },\n                children: (_aggregated$cat$rec = (_aggregated$cat = aggregated[cat]) === null || _aggregated$cat === void 0 ? void 0 : _aggregated$cat[rec]) !== null && _aggregated$cat$rec !== void 0 ? _aggregated$cat$rec : ''\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this);\n            })]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Showsave, \"YhCHcRVE/Yl74FQ34e3FSqBPGcI=\");\n_c = Showsave;\nexport default Showsave;\nvar _c;\n$RefreshReg$(_c, \"Showsave\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","months","Showsave","data","_s","duration","setDuration","categories","setCategories","records","setRecords","aggregated","setAggregated","durationSelector","value","onChange","e","target","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDateKey","month","year","mn","toString","shortYear","slice","getUniqueCategories","cats","Set","map","item","category","getRecords","recs","Date","getMonth","getFullYear","i","push","getMonthYearKey","dateStr","date","startMonth","Math","floor","computeAggregatedData","agg","key","createdAt","cat","deposit","length","COLUMN_WIDTH","VISIBLE_COLUMNS","style","overflowX","width","border","borderCollapse","colSpan","val","textAlign","rec","j","_aggregated$cat$rec","_aggregated$cat","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/Showsave.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../details/Showsave.css';\r\n\r\nconst months = {\r\n  '1': 'Jan',\r\n  '2': 'Feb',\r\n  '3': 'Mar',\r\n  '4': 'Apr',\r\n  '5': 'May',\r\n  '6': 'Jun',\r\n  '7': 'Jul',\r\n  '8': 'Aug',\r\n  '9': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nfunction Showsave({ data }) {\r\n  const [duration, setDuration] = useState('monthly');\r\n  const [categories, setCategories] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [aggregated, setAggregated] = useState({});\r\n\r\n  const durationSelector = () => (\r\n    <select value={duration} onChange={(e) => setDuration(e.target.value)}>\r\n      <option value=\"monthly\">Monthly</option>\r\n      <option value=\"quaterly\">Quarterly</option>\r\n      <option value=\"yearly\">Yearly</option>\r\n    </select>\r\n  );\r\n\r\n  const formatDateKey = (month, year) => {\r\n    const mn = months[month.toString()];\r\n    const shortYear = year.toString().slice(2, 4);\r\n    return `${mn} ${shortYear}`;\r\n  };\r\n\r\n  const getUniqueCategories = () => {\r\n    const cats = [...new Set(data.map(item => item.category))];\r\n    setCategories(cats);\r\n  };\r\n\r\n  const getRecords = () => {\r\n    const recs = [];\r\n    let month = new Date().getMonth() + 1;\r\n    let year = new Date().getFullYear();\r\n\r\n    for (let i = 0; i < 36; i++) {\r\n      recs.push(formatDateKey(month, year));\r\n\r\n      switch (duration) {\r\n        case 'monthly':\r\n          month -= 1;\r\n          break;\r\n        case 'quaterly':\r\n          month -= 3;\r\n          break;\r\n        case 'yearly':\r\n          month -= 12;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      while (month <= 0) {\r\n        month += 12;\r\n        year--;\r\n      }\r\n    }\r\n\r\n    setRecords(recs);\r\n  };\r\n\r\n  const getMonthYearKey = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n\r\n    if (duration === 'monthly') {\r\n      return formatDateKey(month, year);\r\n    } else if (duration === 'quaterly') {\r\n      const startMonth = Math.floor((month - 1) / 3) * 3 + 1;\r\n      return formatDateKey(startMonth, year);\r\n    } else if (duration === 'yearly') {\r\n      return formatDateKey(1, year);\r\n    }\r\n  };\r\n\r\n  const computeAggregatedData = () => {\r\n    const agg = {};\r\n\r\n    for (let item of data) {\r\n      const key = getMonthYearKey(item.createdAt);\r\n      const cat = item.category;\r\n\r\n      if (!agg[cat]) agg[cat] = {};\r\n      if (!agg[cat][key]) agg[cat][key] = 0;\r\n\r\n      agg[cat][key] += item.deposit;\r\n    }\r\n\r\n    setAggregated(agg);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      getUniqueCategories();\r\n      getRecords();\r\n      computeAggregatedData();\r\n    }\r\n  }, [data, duration]);\r\n\r\n  const COLUMN_WIDTH = 100;\r\n  const VISIBLE_COLUMNS = 4;\r\n\r\n  return (\r\n    <>\r\n      <h4>Saving Insights</h4>\r\n      <div\r\n        style={{\r\n          overflowX: 'auto',\r\n          width: `${(VISIBLE_COLUMNS + 1) * COLUMN_WIDTH}px`,\r\n          border: '1px solid #ccc',\r\n        }}\r\n      >\r\n        <table\r\n          style={{\r\n            width: `${(records.length + 1) * COLUMN_WIDTH}px`,\r\n            borderCollapse: 'collapse',\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: `${COLUMN_WIDTH}px` }}>Account</th>\r\n              <th\r\n                colSpan={records.length}\r\n                style={{ width: `${records.length * COLUMN_WIDTH}px` }}\r\n              >\r\n                {durationSelector()}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              {records.map((val, key) => (\r\n                <td\r\n                  key={key}\r\n                  style={{\r\n                    width: `${COLUMN_WIDTH}px`,\r\n                    border: '1px solid #ccc',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {val}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {categories.map((cat, i) => (\r\n              <tr key={i}>\r\n                <td style={{ width: `${COLUMN_WIDTH}px`, border: '1px solid #ccc' }}>\r\n                  {cat}\r\n                </td>\r\n                {records.map((rec, j) => (\r\n                  <td\r\n                    key={j}\r\n                    style={{\r\n                      width: `${COLUMN_WIDTH}px`,\r\n                      border: '1px solid #ccc',\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    {aggregated[cat]?.[rec] ?? ''}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Showsave;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}