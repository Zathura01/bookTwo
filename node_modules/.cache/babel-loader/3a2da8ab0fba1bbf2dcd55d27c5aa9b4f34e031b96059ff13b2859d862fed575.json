{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\entries\\\\SaveEntry.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TakeInput from './TakeEntry';\nimport { useAuth } from '../../context/AuthContext';\nimport { useTrans } from '../../context/TransactionContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst catSave = ['SBI', 'AXIS', 'IDBI'];\nfunction SaveEntry() {\n  _s();\n  const {\n    trans,\n    setTrans\n  } = useTrans();\n  const {\n    auth\n  } = useAuth(); // get userId and token from context\n  const category = TakeInput('SBI');\n  const deposit = TakeInput(0);\n  const date = TakeInput(new Date().toISOString().substring(0, 10)); // only YYYY-MM-DD\n  const cmt = TakeInput('');\n  const handleEntry = async () => {\n    if (!(auth !== null && auth !== void 0 && auth.userId) || !(auth !== null && auth !== void 0 && auth.token)) {\n      alert(\"You're not logged in.\");\n      return;\n    }\n    console.log('Saving:', {\n      userId: auth.userId,\n      category: category.val,\n      deposit: deposit.val,\n      date: date.val,\n      comment: cmt.val\n    });\n    try {\n      const res = await fetch('http://localhost:4500/api/transaction/saveThis', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${auth.token}` // send JWT\n        },\n        body: JSON.stringify({\n          userId: auth.userId,\n          category: category.val,\n          deposit: parseFloat(deposit.val),\n          date: new Date(date.val),\n          comment: cmt.val\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        alert(data.message || 'Failed to save entry');\n        return;\n      }\n      alert('Entry saved successfully!');\n      setTrans(trans + 1);\n    } catch (err) {\n      console.error('Save error:', err);\n      alert('Something went wrong');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"category\",\n      ...category.bind,\n      children: catSave.map((val, ind) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: val,\n        children: val\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      ...deposit.bind,\n      placeholder: \"Enter Amount To Be Deposited\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      ...date.bind,\n      placeholder: \"Select Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ...cmt.bind,\n      placeholder: \"Enter Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEntry,\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SaveEntry, \"KYmBqlQBmOHan/PuaYdPUXExfAQ=\", false, function () {\n  return [useTrans, useAuth];\n});\n_c = SaveEntry;\nexport default SaveEntry;\nvar _c;\n$RefreshReg$(_c, \"SaveEntry\");","map":{"version":3,"names":["React","TakeInput","useAuth","useTrans","jsxDEV","_jsxDEV","Fragment","_Fragment","catSave","SaveEntry","_s","trans","setTrans","auth","category","deposit","date","Date","toISOString","substring","cmt","handleEntry","userId","token","alert","console","log","val","comment","res","fetch","method","headers","Authorization","body","JSON","stringify","parseFloat","data","json","ok","message","err","error","children","name","bind","map","ind","value","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/entries/SaveEntry.js"],"sourcesContent":["import React from 'react';\r\nimport TakeInput from './TakeEntry';\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport { useTrans } from '../../context/TransactionContext';\r\n\r\n\r\n\r\nconst catSave = ['SBI', 'AXIS', 'IDBI'];\r\n\r\nfunction SaveEntry() {\r\n      const { trans, setTrans } = useTrans();\r\n    \r\n  const { auth } = useAuth(); // get userId and token from context\r\n  const category = TakeInput('SBI');\r\n  const deposit = TakeInput(0);\r\n  const date = TakeInput(new Date().toISOString().substring(0, 10)); // only YYYY-MM-DD\r\n  const cmt = TakeInput('');\r\n\r\n  const handleEntry = async () => {\r\n    if (!auth?.userId || !auth?.token) {\r\n      alert(\"You're not logged in.\");\r\n      return;\r\n    }\r\nconsole.log('Saving:', {\r\n  userId: auth.userId,\r\n  category: category.val,\r\n  deposit: deposit.val,\r\n  date: date.val,\r\n  comment: cmt.val,\r\n});    try {\r\n      const res = await fetch('http://localhost:4500/api/transaction/saveThis', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${auth.token}`, // send JWT\r\n        },\r\n        body: JSON.stringify({\r\n          userId: auth.userId,\r\n          category: category.val,\r\n          deposit: parseFloat(deposit.val),\r\n          date: new Date(date.val),\r\n          comment: cmt.val,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        alert(data.message || 'Failed to save entry');\r\n        return;\r\n      }\r\n\r\n      alert('Entry saved successfully!');\r\n      setTrans(trans+1);\r\n    } catch (err) {\r\n      console.error('Save error:', err);\r\n      alert('Something went wrong');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <select name=\"category\" {...category.bind}>\r\n        {catSave.map((val, ind) => (\r\n          <option value={val} key={ind}>\r\n            {val}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <input\r\n        type=\"number\"\r\n        {...deposit.bind}\r\n        placeholder=\"Enter Amount To Be Deposited\"\r\n      />\r\n      <input type=\"date\" {...date.bind} placeholder=\"Select Date\" />\r\n      <input type=\"text\" {...cmt.bind} placeholder=\"Enter Comments\" />\r\n      <button onClick={handleEntry}>Enter</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SaveEntry;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}