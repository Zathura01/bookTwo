{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dur = ['monthly', 'quarterly', 'yearly'];\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec'\n};\nconst monthTrack = {\n  '01': ['Jan', 0],\n  '02': ['Feb', 0],\n  '03': ['Mar', 0],\n  '04': ['Apr', 0],\n  '05': ['May', 0],\n  '06': ['Jun', 0],\n  '07': ['Jul', 0],\n  '08': ['Aug', 0],\n  '09': ['Sep', 0],\n  '10': ['Oct', 0],\n  '11': ['Nov', 0],\n  '12': ['Dec', 0]\n};\nfunction Showsave({\n  data\n}) {\n  _s();\n  const [duration, setDuration] = useState('monthly');\n  const [months, setMonth] = useState([]);\n  const [yearSelector, setYearSelector] = useState([]);\n  const dataProcessing = async () => {\n    let years = [];\n    data.forEach(element => {\n      let year = element.createdAt.slice(0, 4);\n      years.push([year, monthTrack]);\n    });\n    setYearSelector(years);\n    yearSelector.forEach(elemyear => {\n      data.forEach(elemdata => {\n        if (elemyear[0] === elemdata.createdAt.slice(0, 4)) {\n          let month = elemdata.createAt.slice(5, 7);\n          Object.keys(elemyear[1]).forEach(key => {\n            if (key === month) {\n              elemyear[1][key][1] += data.deposit;\n            }\n          });\n        }\n      });\n    });\n  };\n  useEffect(() => {\n    console.log(data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Showsave, \"RxJsR8iyDKnjigF8bvTlOpzyzzU=\");\n_c = Showsave;\nexport default Showsave;\nvar _c;\n$RefreshReg$(_c, \"Showsave\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","dur","months","monthTrack","Showsave","data","_s","duration","setDuration","setMonth","yearSelector","setYearSelector","dataProcessing","years","forEach","element","year","createdAt","slice","push","elemyear","elemdata","month","createAt","Object","keys","key","deposit","console","log","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/Showsave.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst dur = ['monthly', 'quarterly', 'yearly']\r\nconst months = {\r\n  '01': 'Jan', '02': 'Feb', '03': 'Mar', '04': 'Apr',\r\n  '05': 'May', '06': 'Jun', '07': 'Jul', '08': 'Aug',\r\n  '09': 'Sep', '10': 'Oct', '11': 'Nov', '12': 'Dec'\r\n};\r\n\r\n\r\nconst monthTrack = {\r\n  '01': ['Jan', 0], '02': ['Feb', 0], '03': ['Mar', 0], '04': ['Apr', 0],\r\n  '05': ['May', 0], '06': ['Jun', 0], '07': ['Jul', 0], '08': ['Aug', 0],\r\n  '09': ['Sep', 0], '10': ['Oct', 0], '11': ['Nov', 0], '12': ['Dec', 0]\r\n};\r\n\r\n\r\nfunction Showsave({ data }) {\r\n\r\n  const [duration, setDuration] = useState('monthly');\r\n  const [months, setMonth] = useState([]);\r\n  const [yearSelector, setYearSelector] = useState([]);\r\n\r\n\r\n  const dataProcessing = async () => {\r\n\r\n    let years = []\r\n    data.forEach(element => {\r\n      let year = element.createdAt.slice(0, 4);\r\n      years.push([year, monthTrack]);\r\n    });\r\n    setYearSelector(years);\r\n\r\n    yearSelector.forEach(elemyear => {\r\n      data.forEach(elemdata => {\r\n        if (elemyear[0] === elemdata.createdAt.slice(0, 4)) {\r\n          let month = elemdata.createAt.slice(5, 7)\r\n          Object.keys(elemyear[1]).forEach(key => {\r\n            if(key === month){\r\n              elemyear[1][key][1] += data.deposit;\r\n            }\r\n\r\n\r\n          });\r\n        }\r\n\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n\r\n\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Showsave"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}