{"ast":null,"code":"var _jsxFileName = \"C:\\\\web projects\\\\ALW69-BOOK2\\\\book2\\\\src\\\\components\\\\app\\\\insight\\\\details\\\\investments\\\\MutualFundInsight.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTrans } from '../../../../context/TransactionContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MutualFundInsight({\n  data\n}) {\n  _s();\n  const [selector, setSelector] = useState({\n    Data: []\n  });\n  const [curr, setCurr] = useState();\n  const {\n    trans\n  } = useTrans();\n  const findInv = () => {\n    let totalInv = 0;\n    let totalMaketSellPrice = selector.Qty * curr;\n    totalInv = totalMaketSellPrice - selector.Amt;\n    return totalInv;\n  };\n  const dataProcessing = () => {\n    const dataMutualFund = data === null || data === void 0 ? void 0 : data.dataMutualFund;\n    if (!Array.isArray(dataMutualFund)) return;\n    let qtyTotal = 0;\n    let amtTotal = 0;\n    let invTotal = 0;\n    dataMutualFund.forEach(element => {\n      qtyTotal += Number(element.qtyPurchased || 0);\n      amtTotal += Number(element.purchaseAmount || 0);\n    });\n    const totalMaketSellPrice = qtyTotal * (curr || 0);\n    const totalInv = totalMaketSellPrice - amtTotal;\n    setSelector({\n      Qty: qtyTotal,\n      Amt: amtTotal,\n      Inv: totalInv,\n      Data: dataMutualFund\n    });\n  };\n  useEffect(() => {\n    dataProcessing();\n  }, []);\n  useEffect(() => {\n    dataProcessing();\n  }, [curr, trans, selector]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(data, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MutualFundInsight, \"bQUj8SWDMs1zLqyt9pfo1mEoJE4=\", false, function () {\n  return [useTrans];\n});\n_c = MutualFundInsight;\nexport default MutualFundInsight;\nvar _c;\n$RefreshReg$(_c, \"MutualFundInsight\");","map":{"version":3,"names":["React","useEffect","useState","useTrans","jsxDEV","_jsxDEV","Fragment","_Fragment","MutualFundInsight","data","_s","selector","setSelector","Data","curr","setCurr","trans","findInv","totalInv","totalMaketSellPrice","Qty","Amt","dataProcessing","dataMutualFund","Array","isArray","qtyTotal","amtTotal","invTotal","forEach","element","Number","qtyPurchased","purchaseAmount","Inv","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/investments/MutualFundInsight.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useTrans } from '../../../../context/TransactionContext';\r\n\r\n\r\n\r\n\r\nfunction MutualFundInsight({data}) {\r\n  \r\n      const [selector, setSelector] = useState({ Data: [] })\r\n      const [curr, setCurr] = useState();\r\n      const { trans } = useTrans()\r\n  \r\n  \r\n      const findInv = () => {\r\n  \r\n          let totalInv = 0;\r\n          let totalMaketSellPrice = selector.Qty * curr;\r\n          totalInv = totalMaketSellPrice - selector.Amt;\r\n  \r\n          return totalInv;\r\n      }\r\n  \r\n      const dataProcessing = () => {\r\n          const dataMutualFund = data?.dataMutualFund;\r\n          if (!Array.isArray(dataMutualFund)) return;\r\n  \r\n          let qtyTotal = 0;\r\n          let amtTotal = 0;\r\n          let invTotal = 0;\r\n  \r\n          dataMutualFund.forEach(element => {\r\n              qtyTotal += Number(element.qtyPurchased || 0);\r\n              amtTotal += Number(element.purchaseAmount || 0);\r\n          });\r\n  \r\n          const totalMaketSellPrice = qtyTotal * (curr || 0);\r\n          const totalInv = totalMaketSellPrice - amtTotal;\r\n  \r\n          setSelector({\r\n              Qty: qtyTotal,\r\n              Amt: amtTotal,\r\n              Inv: totalInv,\r\n              Data: dataMutualFund,\r\n          });\r\n      };\r\n  \r\n      useEffect(() => {\r\n          dataProcessing();\r\n      }, [])\r\n  \r\n      useEffect(() => {\r\n          dataProcessing();\r\n      }, [curr, trans, selector])\r\n  \r\n  \r\n    return (\r\n\r\n        <>\r\n        {\r\n            <pre>{JSON.stringify(data, null, 2)}</pre>\r\n        }\r\n        </>\r\n\r\n  )\r\n}\r\n\r\nexport default MutualFundInsight"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAKlE,SAASC,iBAAiBA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAE7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IAAEW,IAAI,EAAE;EAAG,CAAC,CAAC;EACtD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAClC,MAAM;IAAEc;EAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAG5B,MAAMc,OAAO,GAAGA,CAAA,KAAM;IAElB,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,mBAAmB,GAAGR,QAAQ,CAACS,GAAG,GAAGN,IAAI;IAC7CI,QAAQ,GAAGC,mBAAmB,GAAGR,QAAQ,CAACU,GAAG;IAE7C,OAAOH,QAAQ;EACnB,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,cAAc,GAAGd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEc,cAAc;IAC3C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,cAAc,CAAC,EAAE;IAEpC,IAAIG,QAAQ,GAAG,CAAC;IAChB,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,QAAQ,GAAG,CAAC;IAEhBL,cAAc,CAACM,OAAO,CAACC,OAAO,IAAI;MAC9BJ,QAAQ,IAAIK,MAAM,CAACD,OAAO,CAACE,YAAY,IAAI,CAAC,CAAC;MAC7CL,QAAQ,IAAII,MAAM,CAACD,OAAO,CAACG,cAAc,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC;IAEF,MAAMd,mBAAmB,GAAGO,QAAQ,IAAIZ,IAAI,IAAI,CAAC,CAAC;IAClD,MAAMI,QAAQ,GAAGC,mBAAmB,GAAGQ,QAAQ;IAE/Cf,WAAW,CAAC;MACRQ,GAAG,EAAEM,QAAQ;MACbL,GAAG,EAAEM,QAAQ;MACbO,GAAG,EAAEhB,QAAQ;MACbL,IAAI,EAAEU;IACV,CAAC,CAAC;EACN,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZqB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACZqB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACR,IAAI,EAAEE,KAAK,EAAEL,QAAQ,CAAC,CAAC;EAG7B,oBAEIN,OAAA,CAAAE,SAAA;IAAA4B,QAAA,eAEI9B,OAAA;MAAA8B,QAAA,EAAMC,IAAI,CAACC,SAAS,CAAC5B,IAAI,EAAE,IAAI,EAAE,CAAC;IAAC;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAE5C,CAAC;AAGX;AAAC/B,EAAA,CA1DQF,iBAAiB;EAAA,QAIFL,QAAQ;AAAA;AAAAuC,EAAA,GAJvBlC,iBAAiB;AA4D1B,eAAeA,iBAAiB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}