{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useTrans } from '../../../../context/TransactionContext';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MutualFundInsight({\n  data\n}) {\n  _s();\n  const [selector, setSelector] = useState({\n    Qty: 0,\n    Amt: 0,\n    Inv: 0,\n    Data: []\n  });\n  const [curr, setCurr] = useState();\n  const {\n    trans\n  } = useTrans();\n  const findInv = () => {\n    let totalInv = 0;\n    let totalMaketSellPrice = selector.Qty * curr;\n    totalInv = totalMaketSellPrice - selector.Amt;\n    return totalInv;\n  };\n  const dataProcessing = () => {\n    const dataGold = data === null || data === void 0 ? void 0 : data.dataGold;\n    if (!Array.isArray(dataGold)) return;\n    let qtyTotal = 0;\n    let amtTotal = 0;\n    let invTotal = 0;\n    dataGold.forEach(element => {\n      qtyTotal += Number(element.qtyPurchased || 0);\n      amtTotal += Number(element.purchaseAmount || 0);\n    });\n    const totalMaketSellPrice = qtyTotal * (curr || 0);\n    const totalInv = totalMaketSellPrice - amtTotal;\n    setSelector({\n      Qty: qtyTotal,\n      Amt: amtTotal,\n      Inv: totalInv,\n      Data: dataGold\n    });\n  };\n  useEffect(() => {\n    dataProcessing();\n  }, []);\n  useEffect(() => {\n    dataProcessing();\n  }, [curr, trans, selector]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MutualFundInsight, \"ksEx3CUscyNeVml3Ar/Dlljp8a8=\", false, function () {\n  return [useTrans];\n});\n_c = MutualFundInsight;\nexport default MutualFundInsight;\nvar _c;\n$RefreshReg$(_c, \"MutualFundInsight\");","map":{"version":3,"names":["React","useEffect","useState","useTrans","Fragment","_Fragment","jsxDEV","_jsxDEV","MutualFundInsight","data","_s","selector","setSelector","Qty","Amt","Inv","Data","curr","setCurr","trans","findInv","totalInv","totalMaketSellPrice","dataProcessing","dataGold","Array","isArray","qtyTotal","amtTotal","invTotal","forEach","element","Number","qtyPurchased","purchaseAmount","_c","$RefreshReg$"],"sources":["C:/web projects/ALW69-BOOK2/book2/src/components/app/insight/details/investments/MutualFundInsight.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useTrans } from '../../../../context/TransactionContext';\r\n\r\n\r\n\r\n\r\nfunction MutualFundInsight({data}) {\r\n  \r\n      const [selector, setSelector] = useState({ Qty: 0, Amt: 0, Inv: 0, Data: [] })\r\n      const [curr, setCurr] = useState();\r\n      const { trans } = useTrans()\r\n  \r\n  \r\n      const findInv = () => {\r\n  \r\n          let totalInv = 0;\r\n          let totalMaketSellPrice = selector.Qty * curr;\r\n          totalInv = totalMaketSellPrice - selector.Amt;\r\n  \r\n          return totalInv;\r\n      }\r\n  \r\n      const dataProcessing = () => {\r\n          const dataGold = data?.dataGold;\r\n          if (!Array.isArray(dataGold)) return;\r\n  \r\n          let qtyTotal = 0;\r\n          let amtTotal = 0;\r\n          let invTotal = 0;\r\n  \r\n          dataGold.forEach(element => {\r\n              qtyTotal += Number(element.qtyPurchased || 0);\r\n              amtTotal += Number(element.purchaseAmount || 0);\r\n          });\r\n  \r\n          const totalMaketSellPrice = qtyTotal * (curr || 0);\r\n          const totalInv = totalMaketSellPrice - amtTotal;\r\n  \r\n          setSelector({\r\n              Qty: qtyTotal,\r\n              Amt: amtTotal,\r\n              Inv: totalInv,\r\n              Data: dataGold,\r\n          });\r\n      };\r\n  \r\n      useEffect(() => {\r\n          dataProcessing();\r\n      }, [])\r\n  \r\n      useEffect(() => {\r\n          dataProcessing();\r\n      }, [curr, trans, selector])\r\n  \r\n  \r\n    return (\r\n\r\n        <>\r\n        \r\n        </>\r\n\r\n  )\r\n}\r\n\r\nexport default MutualFundInsight"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,wCAAwC;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAKlE,SAASC,iBAAiBA,CAAC;EAACC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAE7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IAAEW,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAClC,MAAM;IAAEiB;EAAM,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAG5B,MAAMiB,OAAO,GAAGA,CAAA,KAAM;IAElB,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,mBAAmB,GAAGX,QAAQ,CAACE,GAAG,GAAGI,IAAI;IAC7CI,QAAQ,GAAGC,mBAAmB,GAAGX,QAAQ,CAACG,GAAG;IAE7C,OAAOO,QAAQ;EACnB,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAGf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,QAAQ;IAC/B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;IAE9B,IAAIG,QAAQ,GAAG,CAAC;IAChB,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,QAAQ,GAAG,CAAC;IAEhBL,QAAQ,CAACM,OAAO,CAACC,OAAO,IAAI;MACxBJ,QAAQ,IAAIK,MAAM,CAACD,OAAO,CAACE,YAAY,IAAI,CAAC,CAAC;MAC7CL,QAAQ,IAAII,MAAM,CAACD,OAAO,CAACG,cAAc,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC;IAEF,MAAMZ,mBAAmB,GAAGK,QAAQ,IAAIV,IAAI,IAAI,CAAC,CAAC;IAClD,MAAMI,QAAQ,GAAGC,mBAAmB,GAAGM,QAAQ;IAE/ChB,WAAW,CAAC;MACRC,GAAG,EAAEc,QAAQ;MACbb,GAAG,EAAEc,QAAQ;MACbb,GAAG,EAAEM,QAAQ;MACbL,IAAI,EAAEQ;IACV,CAAC,CAAC;EACN,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZsB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACZsB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,IAAI,EAAEE,KAAK,EAAER,QAAQ,CAAC,CAAC;EAG7B,oBAEIJ,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAGX;AAACK,EAAA,CAxDQF,iBAAiB;EAAA,QAIFL,QAAQ;AAAA;AAAAgC,EAAA,GAJvB3B,iBAAiB;AA0D1B,eAAeA,iBAAiB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}